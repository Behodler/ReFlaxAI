[
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -146,7 +146,8 @@\n         string[] memory _poolTokenSymbols,\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n-        require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n+        /// DeleteExpressionMutation(`require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\")` |==> `assert(true)`) of: `require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");`\n+        assert(true);\n         require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n",
    "id": "1",
    "name": "mutants/1/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -146,7 +146,8 @@\n         string[] memory _poolTokenSymbols,\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n-        require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n+        /// RequireMutation(`_poolTokens.length >= 2 && _poolTokens.length <= 4` |==> `true`) of: `require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");`\n+        require(true, \"Invalid pool token count\");\n         require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n",
    "id": "2",
    "name": "mutants/2/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -146,7 +146,8 @@\n         string[] memory _poolTokenSymbols,\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n-        require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n+        /// RequireMutation(`_poolTokens.length >= 2 && _poolTokens.length <= 4` |==> `false`) of: `require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");`\n+        require(false, \"Invalid pool token count\");\n         require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n",
    "id": "3",
    "name": "mutants/3/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -146,7 +146,8 @@\n         string[] memory _poolTokenSymbols,\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n-        require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n+        /// SwapArgumentsOperatorMutation(`_poolTokens.length >= 2` |==> `2 >= _poolTokens.length`) of: `require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");`\n+        require(2 >= _poolTokens.length && _poolTokens.length <= 4, \"Invalid pool token count\");\n         require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n",
    "id": "4",
    "name": "mutants/4/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -146,7 +146,8 @@\n         string[] memory _poolTokenSymbols,\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n-        require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n+        /// SwapArgumentsOperatorMutation(`_poolTokens.length <= 4` |==> `4 <= _poolTokens.length`) of: `require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");`\n+        require(_poolTokens.length >= 2 && 4 <= _poolTokens.length, \"Invalid pool token count\");\n         require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n",
    "id": "5",
    "name": "mutants/5/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -147,7 +147,8 @@\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n         require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n-        require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n+        /// DeleteExpressionMutation(`require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\")` |==> `assert(true)`) of: `require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");`\n+        assert(true);\n \n         curvePool = _curvePool;\n         crvLpToken = IERC20(_crvLpToken);\n",
    "id": "6",
    "name": "mutants/6/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -147,7 +147,8 @@\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n         require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n-        require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n+        /// RequireMutation(`_poolTokens.length == _poolTokenSymbols.length` |==> `true`) of: `require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");`\n+        require(true, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n         crvLpToken = IERC20(_crvLpToken);\n",
    "id": "7",
    "name": "mutants/7/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -147,7 +147,8 @@\n         address[] memory _rewardTokens\n     ) AYieldSource(_inputToken, _flaxToken, _priceTilter, _oracle, _lpTokenName) {\n         require(_poolTokens.length >= 2 && _poolTokens.length <= 4, \"Invalid pool token count\");\n-        require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");\n+        /// RequireMutation(`_poolTokens.length == _poolTokenSymbols.length` |==> `false`) of: `require(_poolTokens.length == _poolTokenSymbols.length, \"Mismatched symbols\");`\n+        require(false, \"Mismatched symbols\");\n \n         curvePool = _curvePool;\n         crvLpToken = IERC20(_crvLpToken);\n",
    "id": "8",
    "name": "mutants/8/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -153,7 +153,8 @@\n         crvLpToken = IERC20(_crvLpToken);\n         convexBooster = _convexBooster;\n         convexRewardPool = _convexRewardPool;\n-        poolId = _poolId;\n+        /// AssignmentMutation(`_poolId` |==> `0`) of: `poolId = _poolId;`\n+        poolId = 0;\n         uniswapV3Router = _uniswapV3Router;\n         numPoolTokens = _poolTokens.length;\n \n",
    "id": "9",
    "name": "mutants/9/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -153,7 +153,8 @@\n         crvLpToken = IERC20(_crvLpToken);\n         convexBooster = _convexBooster;\n         convexRewardPool = _convexRewardPool;\n-        poolId = _poolId;\n+        /// AssignmentMutation(`_poolId` |==> `1`) of: `poolId = _poolId;`\n+        poolId = 1;\n         uniswapV3Router = _uniswapV3Router;\n         numPoolTokens = _poolTokens.length;\n \n",
    "id": "10",
    "name": "mutants/10/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -155,7 +155,8 @@\n         convexRewardPool = _convexRewardPool;\n         poolId = _poolId;\n         uniswapV3Router = _uniswapV3Router;\n-        numPoolTokens = _poolTokens.length;\n+        /// AssignmentMutation(`_poolTokens.length` |==> `0`) of: `numPoolTokens = _poolTokens.length;`\n+        numPoolTokens = 0;\n \n         // Initialize pool tokens and symbols\n         for (uint256 i = 0; i < _poolTokens.length; i++) {\n",
    "id": "11",
    "name": "mutants/11/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -155,7 +155,8 @@\n         convexRewardPool = _convexRewardPool;\n         poolId = _poolId;\n         uniswapV3Router = _uniswapV3Router;\n-        numPoolTokens = _poolTokens.length;\n+        /// AssignmentMutation(`_poolTokens.length` |==> `1`) of: `numPoolTokens = _poolTokens.length;`\n+        numPoolTokens = 1;\n \n         // Initialize pool tokens and symbols\n         for (uint256 i = 0; i < _poolTokens.length; i++) {\n",
    "id": "12",
    "name": "mutants/12/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -159,7 +159,8 @@\n \n         // Initialize pool tokens and symbols\n         for (uint256 i = 0; i < _poolTokens.length; i++) {\n-            poolTokens.push(IERC20(_poolTokens[i]));\n+            /// DeleteExpressionMutation(`poolTokens.push(IERC20(_poolTokens[i]))` |==> `assert(true)`) of: `poolTokens.push(IERC20(_poolTokens[i]));`\n+            assert(true);\n             poolTokenSymbols.push(_poolTokenSymbols[i]);\n             IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);\n         }\n",
    "id": "13",
    "name": "mutants/13/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -160,7 +160,8 @@\n         // Initialize pool tokens and symbols\n         for (uint256 i = 0; i < _poolTokens.length; i++) {\n             poolTokens.push(IERC20(_poolTokens[i]));\n-            poolTokenSymbols.push(_poolTokenSymbols[i]);\n+            /// DeleteExpressionMutation(`poolTokenSymbols.push(_poolTokenSymbols[i])` |==> `assert(true)`) of: `poolTokenSymbols.push(_poolTokenSymbols[i]);`\n+            assert(true);\n             IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);\n         }\n \n",
    "id": "14",
    "name": "mutants/14/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -161,7 +161,8 @@\n         for (uint256 i = 0; i < _poolTokens.length; i++) {\n             poolTokens.push(IERC20(_poolTokens[i]));\n             poolTokenSymbols.push(_poolTokenSymbols[i]);\n-            IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);\n+            /// DeleteExpressionMutation(`IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max)` |==> `assert(true)`) of: `IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);`\n+            assert(true);\n         }\n \n         // Initialize reward tokens\n",
    "id": "15",
    "name": "mutants/15/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -158,7 +158,8 @@\n         numPoolTokens = _poolTokens.length;\n \n         // Initialize pool tokens and symbols\n-        for (uint256 i = 0; i < _poolTokens.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < _poolTokens.length` |==> `_poolTokens.length < i`) of: `for (uint256 i = 0; i < _poolTokens.length; i++) {`\n+        for (uint256 i = 0; _poolTokens.length < i; i++) {\n             poolTokens.push(IERC20(_poolTokens[i]));\n             poolTokenSymbols.push(_poolTokenSymbols[i]);\n             IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);\n",
    "id": "16",
    "name": "mutants/16/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -158,7 +158,8 @@\n         numPoolTokens = _poolTokens.length;\n \n         // Initialize pool tokens and symbols\n-        for (uint256 i = 0; i < _poolTokens.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < _poolTokens.length; i++) {`\n+        for (uint256 i = 0; i < _poolTokens.length; assert(true)) {\n             poolTokens.push(IERC20(_poolTokens[i]));\n             poolTokenSymbols.push(_poolTokenSymbols[i]);\n             IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);\n",
    "id": "17",
    "name": "mutants/17/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -158,7 +158,8 @@\n         numPoolTokens = _poolTokens.length;\n \n         // Initialize pool tokens and symbols\n-        for (uint256 i = 0; i < _poolTokens.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < _poolTokens.length; i++) {`\n+        for (uint256 i = 0; i < _poolTokens.length; i--) {\n             poolTokens.push(IERC20(_poolTokens[i]));\n             poolTokenSymbols.push(_poolTokenSymbols[i]);\n             IERC20(_poolTokens[i]).approve(_curvePool, type(uint256).max);\n",
    "id": "18",
    "name": "mutants/18/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -166,7 +166,8 @@\n \n         // Initialize reward tokens\n         for (uint256 i = 0; i < _rewardTokens.length; i++) {\n-            rewardTokens.push(_rewardTokens[i]);\n+            /// DeleteExpressionMutation(`rewardTokens.push(_rewardTokens[i])` |==> `assert(true)`) of: `rewardTokens.push(_rewardTokens[i]);`\n+            assert(true);\n         }\n \n         // Approve tokens\n",
    "id": "19",
    "name": "mutants/19/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -165,7 +165,8 @@\n         }\n \n         // Initialize reward tokens\n-        for (uint256 i = 0; i < _rewardTokens.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < _rewardTokens.length` |==> `_rewardTokens.length < i`) of: `for (uint256 i = 0; i < _rewardTokens.length; i++) {`\n+        for (uint256 i = 0; _rewardTokens.length < i; i++) {\n             rewardTokens.push(_rewardTokens[i]);\n         }\n \n",
    "id": "20",
    "name": "mutants/20/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -165,7 +165,8 @@\n         }\n \n         // Initialize reward tokens\n-        for (uint256 i = 0; i < _rewardTokens.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < _rewardTokens.length; i++) {`\n+        for (uint256 i = 0; i < _rewardTokens.length; assert(true)) {\n             rewardTokens.push(_rewardTokens[i]);\n         }\n \n",
    "id": "21",
    "name": "mutants/21/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -165,7 +165,8 @@\n         }\n \n         // Initialize reward tokens\n-        for (uint256 i = 0; i < _rewardTokens.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < _rewardTokens.length; i++) {`\n+        for (uint256 i = 0; i < _rewardTokens.length; i--) {\n             rewardTokens.push(_rewardTokens[i]);\n         }\n \n",
    "id": "22",
    "name": "mutants/22/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -170,7 +170,8 @@\n         }\n \n         // Approve tokens\n-        inputToken.approve(_uniswapV3Router, type(uint256).max);\n+        /// DeleteExpressionMutation(`inputToken.approve(_uniswapV3Router, type(uint256).max)` |==> `assert(true)`) of: `inputToken.approve(_uniswapV3Router, type(uint256).max);`\n+        assert(true);\n         crvLpToken.approve(_convexBooster, type(uint256).max);\n     }\n \n",
    "id": "23",
    "name": "mutants/23/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n \n         // Approve tokens\n         inputToken.approve(_uniswapV3Router, type(uint256).max);\n-        crvLpToken.approve(_convexBooster, type(uint256).max);\n+        /// DeleteExpressionMutation(`crvLpToken.approve(_convexBooster, type(uint256).max)` |==> `assert(true)`) of: `crvLpToken.approve(_convexBooster, type(uint256).max);`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "24",
    "name": "mutants/24/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -181,7 +181,8 @@\n      * @dev Only callable by owner\n      */\n     function setUnderlyingWeights(address pool, uint256[] memory weights) external onlyOwner {\n-        require(pool == curvePool, \"Invalid pool\");\n+        /// DeleteExpressionMutation(`require(pool == curvePool, \"Invalid pool\")` |==> `assert(true)`) of: `require(pool == curvePool, \"Invalid pool\");`\n+        assert(true);\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n",
    "id": "25",
    "name": "mutants/25/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -181,7 +181,8 @@\n      * @dev Only callable by owner\n      */\n     function setUnderlyingWeights(address pool, uint256[] memory weights) external onlyOwner {\n-        require(pool == curvePool, \"Invalid pool\");\n+        /// RequireMutation(`pool == curvePool` |==> `true`) of: `require(pool == curvePool, \"Invalid pool\");`\n+        require(true, \"Invalid pool\");\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n",
    "id": "26",
    "name": "mutants/26/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -181,7 +181,8 @@\n      * @dev Only callable by owner\n      */\n     function setUnderlyingWeights(address pool, uint256[] memory weights) external onlyOwner {\n-        require(pool == curvePool, \"Invalid pool\");\n+        /// RequireMutation(`pool == curvePool` |==> `false`) of: `require(pool == curvePool, \"Invalid pool\");`\n+        require(false, \"Invalid pool\");\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n",
    "id": "27",
    "name": "mutants/27/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -182,7 +182,8 @@\n      */\n     function setUnderlyingWeights(address pool, uint256[] memory weights) external onlyOwner {\n         require(pool == curvePool, \"Invalid pool\");\n-        require(weights.length == poolTokens.length, \"Mismatched weights\");\n+        /// DeleteExpressionMutation(`require(weights.length == poolTokens.length, \"Mismatched weights\")` |==> `assert(true)`) of: `require(weights.length == poolTokens.length, \"Mismatched weights\");`\n+        assert(true);\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n             total += weights[i];\n",
    "id": "28",
    "name": "mutants/28/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -182,7 +182,8 @@\n      */\n     function setUnderlyingWeights(address pool, uint256[] memory weights) external onlyOwner {\n         require(pool == curvePool, \"Invalid pool\");\n-        require(weights.length == poolTokens.length, \"Mismatched weights\");\n+        /// RequireMutation(`weights.length == poolTokens.length` |==> `true`) of: `require(weights.length == poolTokens.length, \"Mismatched weights\");`\n+        require(true, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n             total += weights[i];\n",
    "id": "29",
    "name": "mutants/29/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -182,7 +182,8 @@\n      */\n     function setUnderlyingWeights(address pool, uint256[] memory weights) external onlyOwner {\n         require(pool == curvePool, \"Invalid pool\");\n-        require(weights.length == poolTokens.length, \"Mismatched weights\");\n+        /// RequireMutation(`weights.length == poolTokens.length` |==> `false`) of: `require(weights.length == poolTokens.length, \"Mismatched weights\");`\n+        require(false, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n             total += weights[i];\n",
    "id": "30",
    "name": "mutants/30/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -185,7 +185,8 @@\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n-            total += weights[i];\n+            /// DeleteExpressionMutation(`total += weights[i]` |==> `assert(true)`) of: `total += weights[i];`\n+            assert(true);\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n         underlyingWeights[pool] = weights;\n",
    "id": "31",
    "name": "mutants/31/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -185,7 +185,8 @@\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n-            total += weights[i];\n+            /// AssignmentMutation(`weights[i]` |==> `0`) of: `total += weights[i];`\n+            total += 0;\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n         underlyingWeights[pool] = weights;\n",
    "id": "32",
    "name": "mutants/32/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -185,7 +185,8 @@\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n         for (uint256 i = 0; i < weights.length; i++) {\n-            total += weights[i];\n+            /// AssignmentMutation(`weights[i]` |==> `1`) of: `total += weights[i];`\n+            total += 1;\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n         underlyingWeights[pool] = weights;\n",
    "id": "33",
    "name": "mutants/33/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -184,7 +184,8 @@\n         require(pool == curvePool, \"Invalid pool\");\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n-        for (uint256 i = 0; i < weights.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < weights.length` |==> `weights.length < i`) of: `for (uint256 i = 0; i < weights.length; i++) {`\n+        for (uint256 i = 0; weights.length < i; i++) {\n             total += weights[i];\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n",
    "id": "34",
    "name": "mutants/34/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -184,7 +184,8 @@\n         require(pool == curvePool, \"Invalid pool\");\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n-        for (uint256 i = 0; i < weights.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < weights.length; i++) {`\n+        for (uint256 i = 0; i < weights.length; assert(true)) {\n             total += weights[i];\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n",
    "id": "35",
    "name": "mutants/35/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -184,7 +184,8 @@\n         require(pool == curvePool, \"Invalid pool\");\n         require(weights.length == poolTokens.length, \"Mismatched weights\");\n         uint256 total;\n-        for (uint256 i = 0; i < weights.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < weights.length; i++) {`\n+        for (uint256 i = 0; i < weights.length; i--) {\n             total += weights[i];\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n",
    "id": "36",
    "name": "mutants/36/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -187,7 +187,8 @@\n         for (uint256 i = 0; i < weights.length; i++) {\n             total += weights[i];\n         }\n-        require(total == 10000, \"Weights must sum to 100%\");\n+        /// DeleteExpressionMutation(`require(total == 10000, \"Weights must sum to 100%\")` |==> `assert(true)`) of: `require(total == 10000, \"Weights must sum to 100%\");`\n+        assert(true);\n         underlyingWeights[pool] = weights;\n         emit UnderlyingWeightsUpdated(pool, weights);\n     }\n",
    "id": "37",
    "name": "mutants/37/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -187,7 +187,8 @@\n         for (uint256 i = 0; i < weights.length; i++) {\n             total += weights[i];\n         }\n-        require(total == 10000, \"Weights must sum to 100%\");\n+        /// RequireMutation(`total == 10000` |==> `true`) of: `require(total == 10000, \"Weights must sum to 100%\");`\n+        require(true, \"Weights must sum to 100%\");\n         underlyingWeights[pool] = weights;\n         emit UnderlyingWeightsUpdated(pool, weights);\n     }\n",
    "id": "38",
    "name": "mutants/38/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -187,7 +187,8 @@\n         for (uint256 i = 0; i < weights.length; i++) {\n             total += weights[i];\n         }\n-        require(total == 10000, \"Weights must sum to 100%\");\n+        /// RequireMutation(`total == 10000` |==> `false`) of: `require(total == 10000, \"Weights must sum to 100%\");`\n+        require(false, \"Weights must sum to 100%\");\n         underlyingWeights[pool] = weights;\n         emit UnderlyingWeightsUpdated(pool, weights);\n     }\n",
    "id": "39",
    "name": "mutants/39/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -188,7 +188,8 @@\n             total += weights[i];\n         }\n         require(total == 10000, \"Weights must sum to 100%\");\n-        underlyingWeights[pool] = weights;\n+        /// DeleteExpressionMutation(`underlyingWeights[pool] = weights` |==> `assert(true)`) of: `underlyingWeights[pool] = weights;`\n+        assert(true);\n         emit UnderlyingWeightsUpdated(pool, weights);\n     }\n \n",
    "id": "40",
    "name": "mutants/40/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -199,7 +199,8 @@\n      */\n     function _updateOracle() internal override {\n         // Update oracle for Flax and ETH pair\n-        oracle.update(address(flaxToken), address(0)); // address(0) is used as WETH proxy for oracle\n+        /// DeleteExpressionMutation(`oracle.update(address(flaxToken), address(0))` |==> `assert(true)`) of: `oracle.update(address(flaxToken), address(0)); // address(0) is used as WETH proxy for oracle`\n+        assert(true); // address(0) is used as WETH proxy for oracle\n         \n         // Update oracle for input token and ETH pair if needed\n         if (address(inputToken) != address(0)) {\n",
    "id": "41",
    "name": "mutants/41/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -202,7 +202,8 @@\n         oracle.update(address(flaxToken), address(0)); // address(0) is used as WETH proxy for oracle\n         \n         // Update oracle for input token and ETH pair if needed\n-        if (address(inputToken) != address(0)) {\n+        /// IfStatementMutation(`address(inputToken) != address(0)` |==> `true`) of: `if (address(inputToken) != address(0)) {`\n+        if (true) {\n             oracle.update(address(inputToken), address(0));\n         }\n         \n",
    "id": "42",
    "name": "mutants/42/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -202,7 +202,8 @@\n         oracle.update(address(flaxToken), address(0)); // address(0) is used as WETH proxy for oracle\n         \n         // Update oracle for input token and ETH pair if needed\n-        if (address(inputToken) != address(0)) {\n+        /// IfStatementMutation(`address(inputToken) != address(0)` |==> `false`) of: `if (address(inputToken) != address(0)) {`\n+        if (false) {\n             oracle.update(address(inputToken), address(0));\n         }\n         \n",
    "id": "43",
    "name": "mutants/43/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -203,7 +203,8 @@\n         \n         // Update oracle for input token and ETH pair if needed\n         if (address(inputToken) != address(0)) {\n-            oracle.update(address(inputToken), address(0));\n+            /// DeleteExpressionMutation(`oracle.update(address(inputToken), address(0))` |==> `assert(true)`) of: `oracle.update(address(inputToken), address(0));`\n+            assert(true);\n         }\n         \n         // Update oracles for pool tokens\n",
    "id": "44",
    "name": "mutants/44/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -208,7 +208,8 @@\n         \n         // Update oracles for pool tokens\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {\n+            /// IfStatementMutation(`address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)` |==> `true`) of: `if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {`\n+            if (true) {\n                 oracle.update(address(poolTokens[i]), address(0));\n             }\n         }\n",
    "id": "45",
    "name": "mutants/45/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -208,7 +208,8 @@\n         \n         // Update oracles for pool tokens\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {\n+            /// IfStatementMutation(`address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)` |==> `false`) of: `if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {`\n+            if (false) {\n                 oracle.update(address(poolTokens[i]), address(0));\n             }\n         }\n",
    "id": "46",
    "name": "mutants/46/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -209,7 +209,8 @@\n         // Update oracles for pool tokens\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n             if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {\n-                oracle.update(address(poolTokens[i]), address(0));\n+                /// DeleteExpressionMutation(`oracle.update(address(poolTokens[i]), address(0))` |==> `assert(true)`) of: `oracle.update(address(poolTokens[i]), address(0));`\n+                assert(true);\n             }\n         }\n         \n",
    "id": "47",
    "name": "mutants/47/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -207,7 +207,8 @@\n         }\n         \n         // Update oracles for pool tokens\n-        for (uint256 i = 0; i < poolTokens.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < poolTokens.length` |==> `poolTokens.length < i`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+        for (uint256 i = 0; poolTokens.length < i; i++) {\n             if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {\n                 oracle.update(address(poolTokens[i]), address(0));\n             }\n",
    "id": "48",
    "name": "mutants/48/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -207,7 +207,8 @@\n         }\n         \n         // Update oracles for pool tokens\n-        for (uint256 i = 0; i < poolTokens.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+        for (uint256 i = 0; i < poolTokens.length; assert(true)) {\n             if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {\n                 oracle.update(address(poolTokens[i]), address(0));\n             }\n",
    "id": "49",
    "name": "mutants/49/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -207,7 +207,8 @@\n         }\n         \n         // Update oracles for pool tokens\n-        for (uint256 i = 0; i < poolTokens.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+        for (uint256 i = 0; i < poolTokens.length; i--) {\n             if (address(poolTokens[i]) != address(inputToken) && address(poolTokens[i]) != address(0)) {\n                 oracle.update(address(poolTokens[i]), address(0));\n             }\n",
    "id": "50",
    "name": "mutants/50/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -215,7 +215,8 @@\n         \n         // Update oracles for reward tokens\n         for (uint256 i = 0; i < rewardTokens.length; i++) {\n-            if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {\n+            /// IfStatementMutation(`rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)` |==> `true`) of: `if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {`\n+            if (true) {\n                 oracle.update(rewardTokens[i], address(0));\n             }\n         }\n",
    "id": "51",
    "name": "mutants/51/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -215,7 +215,8 @@\n         \n         // Update oracles for reward tokens\n         for (uint256 i = 0; i < rewardTokens.length; i++) {\n-            if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {\n+            /// IfStatementMutation(`rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)` |==> `false`) of: `if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {`\n+            if (false) {\n                 oracle.update(rewardTokens[i], address(0));\n             }\n         }\n",
    "id": "52",
    "name": "mutants/52/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -216,7 +216,8 @@\n         // Update oracles for reward tokens\n         for (uint256 i = 0; i < rewardTokens.length; i++) {\n             if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {\n-                oracle.update(rewardTokens[i], address(0));\n+                /// DeleteExpressionMutation(`oracle.update(rewardTokens[i], address(0))` |==> `assert(true)`) of: `oracle.update(rewardTokens[i], address(0));`\n+                assert(true);\n             }\n         }\n     }\n",
    "id": "53",
    "name": "mutants/53/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -214,7 +214,8 @@\n         }\n         \n         // Update oracles for reward tokens\n-        for (uint256 i = 0; i < rewardTokens.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < rewardTokens.length` |==> `rewardTokens.length < i`) of: `for (uint256 i = 0; i < rewardTokens.length; i++) {`\n+        for (uint256 i = 0; rewardTokens.length < i; i++) {\n             if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {\n                 oracle.update(rewardTokens[i], address(0));\n             }\n",
    "id": "54",
    "name": "mutants/54/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -214,7 +214,8 @@\n         }\n         \n         // Update oracles for reward tokens\n-        for (uint256 i = 0; i < rewardTokens.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < rewardTokens.length; i++) {`\n+        for (uint256 i = 0; i < rewardTokens.length; assert(true)) {\n             if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {\n                 oracle.update(rewardTokens[i], address(0));\n             }\n",
    "id": "55",
    "name": "mutants/55/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -214,7 +214,8 @@\n         }\n         \n         // Update oracles for reward tokens\n-        for (uint256 i = 0; i < rewardTokens.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < rewardTokens.length; i++) {`\n+        for (uint256 i = 0; i < rewardTokens.length; i--) {\n             if (rewardTokens[i] != address(0) && rewardTokens[i] != address(flaxToken)) {\n                 oracle.update(rewardTokens[i], address(0));\n             }\n",
    "id": "56",
    "name": "mutants/56/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -232,7 +232,8 @@\n         \n         // Allocate inputToken based on weights\n         uint256[] memory weights = underlyingWeights[curvePool];\n-        if (weights.length == 0) {\n+        /// IfStatementMutation(`weights.length == 0` |==> `true`) of: `if (weights.length == 0) {`\n+        if (true) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n                 weights[i] = 10000 / poolTokens.length;\n",
    "id": "57",
    "name": "mutants/57/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -232,7 +232,8 @@\n         \n         // Allocate inputToken based on weights\n         uint256[] memory weights = underlyingWeights[curvePool];\n-        if (weights.length == 0) {\n+        /// IfStatementMutation(`weights.length == 0` |==> `false`) of: `if (weights.length == 0) {`\n+        if (false) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n                 weights[i] = 10000 / poolTokens.length;\n",
    "id": "58",
    "name": "mutants/58/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -233,7 +233,8 @@\n         // Allocate inputToken based on weights\n         uint256[] memory weights = underlyingWeights[curvePool];\n         if (weights.length == 0) {\n-            weights = new uint256[](poolTokens.length);\n+            /// DeleteExpressionMutation(`weights = new uint256[](poolTokens.length)` |==> `assert(true)`) of: `weights = new uint256[](poolTokens.length);`\n+            assert(true);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n                 weights[i] = 10000 / poolTokens.length;\n             }\n",
    "id": "59",
    "name": "mutants/59/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// DeleteExpressionMutation(`weights[i] = 10000 / poolTokens.length` |==> `assert(true)`) of: `weights[i] = 10000 / poolTokens.length;`\n+                assert(true);\n             }\n         }\n \n",
    "id": "60",
    "name": "mutants/60/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// AssignmentMutation(`10000 / poolTokens.length` |==> `0`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 0;\n             }\n         }\n \n",
    "id": "61",
    "name": "mutants/61/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// AssignmentMutation(`10000 / poolTokens.length` |==> `1`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 1;\n             }\n         }\n \n",
    "id": "62",
    "name": "mutants/62/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// BinaryOpMutation(`/` |==> `+`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 10000+poolTokens.length;\n             }\n         }\n \n",
    "id": "63",
    "name": "mutants/63/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// BinaryOpMutation(`/` |==> `-`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 10000-poolTokens.length;\n             }\n         }\n \n",
    "id": "64",
    "name": "mutants/64/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// BinaryOpMutation(`/` |==> `*`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 10000*poolTokens.length;\n             }\n         }\n \n",
    "id": "65",
    "name": "mutants/65/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// BinaryOpMutation(`/` |==> `%`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 10000%poolTokens.length;\n             }\n         }\n \n",
    "id": "66",
    "name": "mutants/66/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// BinaryOpMutation(`/` |==> `**`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = 10000**poolTokens.length;\n             }\n         }\n \n",
    "id": "67",
    "name": "mutants/67/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                weights[i] = 10000 / poolTokens.length;\n+                /// SwapArgumentsOperatorMutation(`10000 / poolTokens.length` |==> `poolTokens.length / 10000`) of: `weights[i] = 10000 / poolTokens.length;`\n+                weights[i] = poolTokens.length / 10000;\n             }\n         }\n \n",
    "id": "68",
    "name": "mutants/68/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -234,7 +234,8 @@\n         uint256[] memory weights = underlyingWeights[curvePool];\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n-            for (uint256 i = 0; i < poolTokens.length; i++) {\n+            /// SwapArgumentsOperatorMutation(`i < poolTokens.length` |==> `poolTokens.length < i`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+            for (uint256 i = 0; poolTokens.length < i; i++) {\n                 weights[i] = 10000 / poolTokens.length;\n             }\n         }\n",
    "id": "69",
    "name": "mutants/69/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -234,7 +234,8 @@\n         uint256[] memory weights = underlyingWeights[curvePool];\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n-            for (uint256 i = 0; i < poolTokens.length; i++) {\n+            /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+            for (uint256 i = 0; i < poolTokens.length; assert(true)) {\n                 weights[i] = 10000 / poolTokens.length;\n             }\n         }\n",
    "id": "70",
    "name": "mutants/70/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -234,7 +234,8 @@\n         uint256[] memory weights = underlyingWeights[curvePool];\n         if (weights.length == 0) {\n             weights = new uint256[](poolTokens.length);\n-            for (uint256 i = 0; i < poolTokens.length; i++) {\n+            /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+            for (uint256 i = 0; i < poolTokens.length; i--) {\n                 weights[i] = 10000 / poolTokens.length;\n             }\n         }\n",
    "id": "71",
    "name": "mutants/71/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`/` |==> `+`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount * weights[i])+10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "72",
    "name": "mutants/72/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`/` |==> `-`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount * weights[i])-10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "73",
    "name": "mutants/73/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`/` |==> `*`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount * weights[i])*10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "74",
    "name": "mutants/74/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`/` |==> `%`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount * weights[i])%10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "75",
    "name": "mutants/75/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`/` |==> `**`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount * weights[i])**10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "76",
    "name": "mutants/76/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// SwapArgumentsOperatorMutation(`(amount * weights[i]) / 10000` |==> `10000 / (amount * weights[i])`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = 10000 / (amount * weights[i]);\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "77",
    "name": "mutants/77/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`*` |==> `+`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount+weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "78",
    "name": "mutants/78/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`*` |==> `-`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount-weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "79",
    "name": "mutants/79/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`*` |==> `/`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount/weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "80",
    "name": "mutants/80/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`*` |==> `%`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount%weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "81",
    "name": "mutants/81/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n         \n         // Handle each pool token\n         for (uint256 i = 0; i < poolTokens.length; i++) {\n-            uint256 allocatedAmount = (amount * weights[i]) / 10000;\n+            /// BinaryOpMutation(`*` |==> `**`) of: `uint256 allocatedAmount = (amount * weights[i]) / 10000;`\n+            uint256 allocatedAmount = (amount**weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n",
    "id": "82",
    "name": "mutants/82/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -246,7 +246,8 @@\n             uint256 allocatedAmount = (amount * weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n-            if (address(poolTokens[i]) == address(inputToken)) {\n+            /// IfStatementMutation(`address(poolTokens[i]) == address(inputToken)` |==> `true`) of: `if (address(poolTokens[i]) == address(inputToken)) {`\n+            if (true) {\n                 amounts[i] = allocatedAmount;\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n",
    "id": "83",
    "name": "mutants/83/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -246,7 +246,8 @@\n             uint256 allocatedAmount = (amount * weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n-            if (address(poolTokens[i]) == address(inputToken)) {\n+            /// IfStatementMutation(`address(poolTokens[i]) == address(inputToken)` |==> `false`) of: `if (address(poolTokens[i]) == address(inputToken)) {`\n+            if (false) {\n                 amounts[i] = allocatedAmount;\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n",
    "id": "84",
    "name": "mutants/84/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -248,7 +248,8 @@\n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n                 amounts[i] = allocatedAmount;\n-            } else if (allocatedAmount > 0) {\n+            /// IfStatementMutation(`allocatedAmount > 0` |==> `true`) of: `} else if (allocatedAmount > 0) {`\n+            } else if (true) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n                 minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "85",
    "name": "mutants/85/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -248,7 +248,8 @@\n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n                 amounts[i] = allocatedAmount;\n-            } else if (allocatedAmount > 0) {\n+            /// IfStatementMutation(`allocatedAmount > 0` |==> `false`) of: `} else if (allocatedAmount > 0) {`\n+            } else if (false) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n                 minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "86",
    "name": "mutants/86/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -248,7 +248,8 @@\n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n                 amounts[i] = allocatedAmount;\n-            } else if (allocatedAmount > 0) {\n+            /// SwapArgumentsOperatorMutation(`allocatedAmount > 0` |==> `0 > allocatedAmount`) of: `} else if (allocatedAmount > 0) {`\n+            } else if (0 > allocatedAmount) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n                 minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "87",
    "name": "mutants/87/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -265,7 +265,8 @@\n                 );\n             } else {\n                 // Zero allocated amount, skip swap\n-                amounts[i] = 0;\n+                /// DeleteExpressionMutation(`amounts[i] = 0` |==> `assert(true)`) of: `amounts[i] = 0;`\n+                assert(true);\n             }\n         }\n \n",
    "id": "88",
    "name": "mutants/88/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -265,7 +265,8 @@\n                 );\n             } else {\n                 // Zero allocated amount, skip swap\n-                amounts[i] = 0;\n+                /// AssignmentMutation(`0` |==> `1`) of: `amounts[i] = 0;`\n+                amounts[i] = 1;\n             }\n         }\n \n",
    "id": "89",
    "name": "mutants/89/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// DeleteExpressionMutation(`minOut = (minOut * (10000 - minSlippageBps)) / 10000` |==> `assert(true)`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                assert(true);\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "90",
    "name": "mutants/90/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// AssignmentMutation(`(minOut * (10000 - minSlippageBps)) / 10000` |==> `0`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = 0;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "91",
    "name": "mutants/91/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// AssignmentMutation(`(minOut * (10000 - minSlippageBps)) / 10000` |==> `1`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = 1;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "92",
    "name": "mutants/92/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`/` |==> `+`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000 - minSlippageBps))+10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "93",
    "name": "mutants/93/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`/` |==> `-`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000 - minSlippageBps))-10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "94",
    "name": "mutants/94/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`/` |==> `*`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000 - minSlippageBps))*10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "95",
    "name": "mutants/95/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`/` |==> `%`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000 - minSlippageBps))%10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "96",
    "name": "mutants/96/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`/` |==> `**`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000 - minSlippageBps))**10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "97",
    "name": "mutants/97/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// SwapArgumentsOperatorMutation(`(minOut * (10000 - minSlippageBps)) / 10000` |==> `10000 / (minOut * (10000 - minSlippageBps))`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = 10000 / (minOut * (10000 - minSlippageBps));\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "98",
    "name": "mutants/98/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`*` |==> `+`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut+(10000 - minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "99",
    "name": "mutants/99/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`*` |==> `-`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut-(10000 - minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "100",
    "name": "mutants/100/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`*` |==> `/`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut/(10000 - minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "101",
    "name": "mutants/101/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`*` |==> `%`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut%(10000 - minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "102",
    "name": "mutants/102/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`*` |==> `**`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut**(10000 - minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "103",
    "name": "mutants/103/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`-` |==> `+`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000+minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "104",
    "name": "mutants/104/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`-` |==> `*`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000*minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "105",
    "name": "mutants/105/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`-` |==> `/`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000/minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "106",
    "name": "mutants/106/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`-` |==> `%`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000%minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "107",
    "name": "mutants/107/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// BinaryOpMutation(`-` |==> `**`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (10000**minSlippageBps)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "108",
    "name": "mutants/108/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -251,7 +251,8 @@\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n-                minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                /// SwapArgumentsOperatorMutation(`10000 - minSlippageBps` |==> `minSlippageBps - 10000`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                minOut = (minOut * (minSlippageBps - 10000)) / 10000;\n                 amounts[i] = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                     IUniswapV3Router.ExactInputSingleParams({\n                         tokenIn: address(inputToken),\n",
    "id": "109",
    "name": "mutants/109/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -247,7 +247,8 @@\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n-                amounts[i] = allocatedAmount;\n+                /// DeleteExpressionMutation(`amounts[i] = allocatedAmount` |==> `assert(true)`) of: `amounts[i] = allocatedAmount;`\n+                assert(true);\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n",
    "id": "110",
    "name": "mutants/110/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -247,7 +247,8 @@\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n-                amounts[i] = allocatedAmount;\n+                /// AssignmentMutation(`allocatedAmount` |==> `0`) of: `amounts[i] = allocatedAmount;`\n+                amounts[i] = 0;\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n",
    "id": "111",
    "name": "mutants/111/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -247,7 +247,8 @@\n             \n             // If this pool token is the same as input token, no swap needed\n             if (address(poolTokens[i]) == address(inputToken)) {\n-                amounts[i] = allocatedAmount;\n+                /// AssignmentMutation(`allocatedAmount` |==> `1`) of: `amounts[i] = allocatedAmount;`\n+                amounts[i] = 1;\n             } else if (allocatedAmount > 0) {\n                 // Need to swap inputToken to this pool token (only if amount > 0)\n                 uint256 minOut = oracle.consult(address(inputToken), address(poolTokens[i]), allocatedAmount);\n",
    "id": "112",
    "name": "mutants/112/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -242,7 +242,8 @@\n         uint256[] memory amounts = new uint256[](poolTokens.length);\n         \n         // Handle each pool token\n-        for (uint256 i = 0; i < poolTokens.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < poolTokens.length` |==> `poolTokens.length < i`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+        for (uint256 i = 0; poolTokens.length < i; i++) {\n             uint256 allocatedAmount = (amount * weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n",
    "id": "113",
    "name": "mutants/113/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -242,7 +242,8 @@\n         uint256[] memory amounts = new uint256[](poolTokens.length);\n         \n         // Handle each pool token\n-        for (uint256 i = 0; i < poolTokens.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+        for (uint256 i = 0; i < poolTokens.length; assert(true)) {\n             uint256 allocatedAmount = (amount * weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n",
    "id": "114",
    "name": "mutants/114/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -242,7 +242,8 @@\n         uint256[] memory amounts = new uint256[](poolTokens.length);\n         \n         // Handle each pool token\n-        for (uint256 i = 0; i < poolTokens.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+        for (uint256 i = 0; i < poolTokens.length; i--) {\n             uint256 allocatedAmount = (amount * weights[i]) / 10000;\n             \n             // If this pool token is the same as input token, no swap needed\n",
    "id": "115",
    "name": "mutants/115/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -273,7 +273,8 @@\n         uint256 lpAmount = _addLiquidityToCurve(amounts);\n \n         // Deposit LP tokens to Convex\n-        IConvexBooster(convexBooster).deposit(poolId, lpAmount, true);\n+        /// DeleteExpressionMutation(`IConvexBooster(convexBooster).deposit(poolId, lpAmount, true)` |==> `assert(true)`) of: `IConvexBooster(convexBooster).deposit(poolId, lpAmount, true);`\n+        assert(true);\n         \n         // Update TWAP oracle after deposit - REMOVED\n         \n",
    "id": "116",
    "name": "mutants/116/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n         // Calculate LP amount to withdraw based on proportion of input tokens\n         // This is an approximation - in a real system, you'd want more sophisticated calculation\n         uint256 lpAmountToWithdraw;\n-        if (totalDeposited > 0) {\n+        /// IfStatementMutation(`totalDeposited > 0` |==> `true`) of: `if (totalDeposited > 0) {`\n+        if (true) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n             lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n",
    "id": "117",
    "name": "mutants/117/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n         // Calculate LP amount to withdraw based on proportion of input tokens\n         // This is an approximation - in a real system, you'd want more sophisticated calculation\n         uint256 lpAmountToWithdraw;\n-        if (totalDeposited > 0) {\n+        /// IfStatementMutation(`totalDeposited > 0` |==> `false`) of: `if (totalDeposited > 0) {`\n+        if (false) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n             lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n",
    "id": "118",
    "name": "mutants/118/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n         // Calculate LP amount to withdraw based on proportion of input tokens\n         // This is an approximation - in a real system, you'd want more sophisticated calculation\n         uint256 lpAmountToWithdraw;\n-        if (totalDeposited > 0) {\n+        /// SwapArgumentsOperatorMutation(`totalDeposited > 0` |==> `0 > totalDeposited`) of: `if (totalDeposited > 0) {`\n+        if (0 > totalDeposited) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n             lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n",
    "id": "119",
    "name": "mutants/119/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -306,7 +306,8 @@\n                 lpAmountToWithdraw = totalDeposited;\n             }\n         } else {\n-            lpAmountToWithdraw = 0;\n+            /// DeleteExpressionMutation(`lpAmountToWithdraw = 0` |==> `assert(true)`) of: `lpAmountToWithdraw = 0;`\n+            assert(true);\n         }\n         \n         if (lpAmountToWithdraw > 0) {\n",
    "id": "120",
    "name": "mutants/120/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -306,7 +306,8 @@\n                 lpAmountToWithdraw = totalDeposited;\n             }\n         } else {\n-            lpAmountToWithdraw = 0;\n+            /// AssignmentMutation(`0` |==> `1`) of: `lpAmountToWithdraw = 0;`\n+            lpAmountToWithdraw = 1;\n         }\n         \n         if (lpAmountToWithdraw > 0) {\n",
    "id": "121",
    "name": "mutants/121/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// DeleteExpressionMutation(`lpAmountToWithdraw = amount * 1e12` |==> `assert(true)`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            assert(true); // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "122",
    "name": "mutants/122/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// AssignmentMutation(`amount * 1e12` |==> `0`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = 0; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "123",
    "name": "mutants/123/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// AssignmentMutation(`amount * 1e12` |==> `1`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = 1; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "124",
    "name": "mutants/124/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// BinaryOpMutation(`*` |==> `+`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = amount+1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "125",
    "name": "mutants/125/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// BinaryOpMutation(`*` |==> `-`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = amount-1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "126",
    "name": "mutants/126/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// BinaryOpMutation(`*` |==> `/`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = amount/1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "127",
    "name": "mutants/127/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// BinaryOpMutation(`*` |==> `%`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = amount%1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "128",
    "name": "mutants/128/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -299,7 +299,8 @@\n         if (totalDeposited > 0) {\n             // Calculate proportional LP amount based on input token amount requested\n             // Assume roughly 1:1 ratio for this mock (should use actual pool math in production)\n-            lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n+            /// BinaryOpMutation(`*` |==> `**`) of: `lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)`\n+            lpAmountToWithdraw = amount**1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n",
    "id": "129",
    "name": "mutants/129/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -302,7 +302,8 @@\n             lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n-            if (lpAmountToWithdraw > totalDeposited) {\n+            /// IfStatementMutation(`lpAmountToWithdraw > totalDeposited` |==> `true`) of: `if (lpAmountToWithdraw > totalDeposited) {`\n+            if (true) {\n                 lpAmountToWithdraw = totalDeposited;\n             }\n         } else {\n",
    "id": "130",
    "name": "mutants/130/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -302,7 +302,8 @@\n             lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n-            if (lpAmountToWithdraw > totalDeposited) {\n+            /// IfStatementMutation(`lpAmountToWithdraw > totalDeposited` |==> `false`) of: `if (lpAmountToWithdraw > totalDeposited) {`\n+            if (false) {\n                 lpAmountToWithdraw = totalDeposited;\n             }\n         } else {\n",
    "id": "131",
    "name": "mutants/131/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -302,7 +302,8 @@\n             lpAmountToWithdraw = amount * 1e12; // Convert USDC (6 decimals) to LP equivalent (18 decimals)\n             \n             // Ensure we don't withdraw more than what we have\n-            if (lpAmountToWithdraw > totalDeposited) {\n+            /// SwapArgumentsOperatorMutation(`lpAmountToWithdraw > totalDeposited` |==> `totalDeposited > lpAmountToWithdraw`) of: `if (lpAmountToWithdraw > totalDeposited) {`\n+            if (totalDeposited > lpAmountToWithdraw) {\n                 lpAmountToWithdraw = totalDeposited;\n             }\n         } else {\n",
    "id": "132",
    "name": "mutants/132/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -303,7 +303,8 @@\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n-                lpAmountToWithdraw = totalDeposited;\n+                /// DeleteExpressionMutation(`lpAmountToWithdraw = totalDeposited` |==> `assert(true)`) of: `lpAmountToWithdraw = totalDeposited;`\n+                assert(true);\n             }\n         } else {\n             lpAmountToWithdraw = 0;\n",
    "id": "133",
    "name": "mutants/133/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -303,7 +303,8 @@\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n-                lpAmountToWithdraw = totalDeposited;\n+                /// AssignmentMutation(`totalDeposited` |==> `0`) of: `lpAmountToWithdraw = totalDeposited;`\n+                lpAmountToWithdraw = 0;\n             }\n         } else {\n             lpAmountToWithdraw = 0;\n",
    "id": "134",
    "name": "mutants/134/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -303,7 +303,8 @@\n             \n             // Ensure we don't withdraw more than what we have\n             if (lpAmountToWithdraw > totalDeposited) {\n-                lpAmountToWithdraw = totalDeposited;\n+                /// AssignmentMutation(`totalDeposited` |==> `1`) of: `lpAmountToWithdraw = totalDeposited;`\n+                lpAmountToWithdraw = 1;\n             }\n         } else {\n             lpAmountToWithdraw = 0;\n",
    "id": "135",
    "name": "mutants/135/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -309,7 +309,8 @@\n             lpAmountToWithdraw = 0;\n         }\n         \n-        if (lpAmountToWithdraw > 0) {\n+        /// IfStatementMutation(`lpAmountToWithdraw > 0` |==> `true`) of: `if (lpAmountToWithdraw > 0) {`\n+        if (true) {\n             // Withdraw LP tokens from Convex\n             IConvexBooster(convexBooster).withdraw(poolId, lpAmountToWithdraw);\n \n",
    "id": "136",
    "name": "mutants/136/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -309,7 +309,8 @@\n             lpAmountToWithdraw = 0;\n         }\n         \n-        if (lpAmountToWithdraw > 0) {\n+        /// IfStatementMutation(`lpAmountToWithdraw > 0` |==> `false`) of: `if (lpAmountToWithdraw > 0) {`\n+        if (false) {\n             // Withdraw LP tokens from Convex\n             IConvexBooster(convexBooster).withdraw(poolId, lpAmountToWithdraw);\n \n",
    "id": "137",
    "name": "mutants/137/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -309,7 +309,8 @@\n             lpAmountToWithdraw = 0;\n         }\n         \n-        if (lpAmountToWithdraw > 0) {\n+        /// SwapArgumentsOperatorMutation(`lpAmountToWithdraw > 0` |==> `0 > lpAmountToWithdraw`) of: `if (lpAmountToWithdraw > 0) {`\n+        if (0 > lpAmountToWithdraw) {\n             // Withdraw LP tokens from Convex\n             IConvexBooster(convexBooster).withdraw(poolId, lpAmountToWithdraw);\n \n",
    "id": "138",
    "name": "mutants/138/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -311,7 +311,8 @@\n         \n         if (lpAmountToWithdraw > 0) {\n             // Withdraw LP tokens from Convex\n-            IConvexBooster(convexBooster).withdraw(poolId, lpAmountToWithdraw);\n+            /// DeleteExpressionMutation(`IConvexBooster(convexBooster).withdraw(poolId, lpAmountToWithdraw)` |==> `assert(true)`) of: `IConvexBooster(convexBooster).withdraw(poolId, lpAmountToWithdraw);`\n+            assert(true);\n \n             // Find the index of input token in the pool\n             uint256 inputTokenIndex = type(uint256).max;\n",
    "id": "139",
    "name": "mutants/139/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -316,7 +316,8 @@\n             // Find the index of input token in the pool\n             uint256 inputTokenIndex = type(uint256).max;\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                if (address(poolTokens[i]) == address(inputToken)) {\n+                /// IfStatementMutation(`address(poolTokens[i]) == address(inputToken)` |==> `true`) of: `if (address(poolTokens[i]) == address(inputToken)) {`\n+                if (true) {\n                     inputTokenIndex = i;\n                     break;\n                 }\n",
    "id": "140",
    "name": "mutants/140/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -316,7 +316,8 @@\n             // Find the index of input token in the pool\n             uint256 inputTokenIndex = type(uint256).max;\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n-                if (address(poolTokens[i]) == address(inputToken)) {\n+                /// IfStatementMutation(`address(poolTokens[i]) == address(inputToken)` |==> `false`) of: `if (address(poolTokens[i]) == address(inputToken)) {`\n+                if (false) {\n                     inputTokenIndex = i;\n                     break;\n                 }\n",
    "id": "141",
    "name": "mutants/141/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -317,7 +317,8 @@\n             uint256 inputTokenIndex = type(uint256).max;\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n                 if (address(poolTokens[i]) == address(inputToken)) {\n-                    inputTokenIndex = i;\n+                    /// DeleteExpressionMutation(`inputTokenIndex = i` |==> `assert(true)`) of: `inputTokenIndex = i;`\n+                    assert(true);\n                     break;\n                 }\n             }\n",
    "id": "142",
    "name": "mutants/142/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -317,7 +317,8 @@\n             uint256 inputTokenIndex = type(uint256).max;\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n                 if (address(poolTokens[i]) == address(inputToken)) {\n-                    inputTokenIndex = i;\n+                    /// AssignmentMutation(`i` |==> `0`) of: `inputTokenIndex = i;`\n+                    inputTokenIndex = 0;\n                     break;\n                 }\n             }\n",
    "id": "143",
    "name": "mutants/143/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -317,7 +317,8 @@\n             uint256 inputTokenIndex = type(uint256).max;\n             for (uint256 i = 0; i < poolTokens.length; i++) {\n                 if (address(poolTokens[i]) == address(inputToken)) {\n-                    inputTokenIndex = i;\n+                    /// AssignmentMutation(`i` |==> `1`) of: `inputTokenIndex = i;`\n+                    inputTokenIndex = 1;\n                     break;\n                 }\n             }\n",
    "id": "144",
    "name": "mutants/144/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -315,7 +315,8 @@\n \n             // Find the index of input token in the pool\n             uint256 inputTokenIndex = type(uint256).max;\n-            for (uint256 i = 0; i < poolTokens.length; i++) {\n+            /// SwapArgumentsOperatorMutation(`i < poolTokens.length` |==> `poolTokens.length < i`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+            for (uint256 i = 0; poolTokens.length < i; i++) {\n                 if (address(poolTokens[i]) == address(inputToken)) {\n                     inputTokenIndex = i;\n                     break;\n",
    "id": "145",
    "name": "mutants/145/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -315,7 +315,8 @@\n \n             // Find the index of input token in the pool\n             uint256 inputTokenIndex = type(uint256).max;\n-            for (uint256 i = 0; i < poolTokens.length; i++) {\n+            /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+            for (uint256 i = 0; i < poolTokens.length; assert(true)) {\n                 if (address(poolTokens[i]) == address(inputToken)) {\n                     inputTokenIndex = i;\n                     break;\n",
    "id": "146",
    "name": "mutants/146/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -315,7 +315,8 @@\n \n             // Find the index of input token in the pool\n             uint256 inputTokenIndex = type(uint256).max;\n-            for (uint256 i = 0; i < poolTokens.length; i++) {\n+            /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < poolTokens.length; i++) {`\n+            for (uint256 i = 0; i < poolTokens.length; i--) {\n                 if (address(poolTokens[i]) == address(inputToken)) {\n                     inputTokenIndex = i;\n                     break;\n",
    "id": "147",
    "name": "mutants/147/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -323,7 +323,8 @@\n             }\n             \n             // If input token is one of the pool tokens, remove liquidity to that token\n-            if (inputTokenIndex != type(uint256).max) {\n+            /// IfStatementMutation(`inputTokenIndex != type(uint256).max` |==> `true`) of: `if (inputTokenIndex != type(uint256).max) {`\n+            if (true) {\n                 inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);\n             } else {\n                 // Input token is not in the pool, need to remove liquidity and swap\n",
    "id": "148",
    "name": "mutants/148/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -323,7 +323,8 @@\n             }\n             \n             // If input token is one of the pool tokens, remove liquidity to that token\n-            if (inputTokenIndex != type(uint256).max) {\n+            /// IfStatementMutation(`inputTokenIndex != type(uint256).max` |==> `false`) of: `if (inputTokenIndex != type(uint256).max) {`\n+            if (false) {\n                 inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);\n             } else {\n                 // Input token is not in the pool, need to remove liquidity and swap\n",
    "id": "149",
    "name": "mutants/149/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -330,7 +330,8 @@\n                 // For simplicity, remove to the first token and swap\n                 uint256 token0Amount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, 0, 0);\n                 \n-                if (token0Amount > 0) {\n+                /// IfStatementMutation(`token0Amount > 0` |==> `true`) of: `if (token0Amount > 0) {`\n+                if (true) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n                     minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "150",
    "name": "mutants/150/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -330,7 +330,8 @@\n                 // For simplicity, remove to the first token and swap\n                 uint256 token0Amount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, 0, 0);\n                 \n-                if (token0Amount > 0) {\n+                /// IfStatementMutation(`token0Amount > 0` |==> `false`) of: `if (token0Amount > 0) {`\n+                if (false) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n                     minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "151",
    "name": "mutants/151/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -330,7 +330,8 @@\n                 // For simplicity, remove to the first token and swap\n                 uint256 token0Amount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, 0, 0);\n                 \n-                if (token0Amount > 0) {\n+                /// SwapArgumentsOperatorMutation(`token0Amount > 0` |==> `0 > token0Amount`) of: `if (token0Amount > 0) {`\n+                if (0 > token0Amount) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n                     minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "152",
    "name": "mutants/152/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -348,7 +348,8 @@\n                         })\n                     );\n                 } else {\n-                    inputTokenAmount = 0;\n+                    /// DeleteExpressionMutation(`inputTokenAmount = 0` |==> `assert(true)`) of: `inputTokenAmount = 0;`\n+                    assert(true);\n                 }\n             }\n         }\n",
    "id": "153",
    "name": "mutants/153/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -348,7 +348,8 @@\n                         })\n                     );\n                 } else {\n-                    inputTokenAmount = 0;\n+                    /// AssignmentMutation(`0` |==> `1`) of: `inputTokenAmount = 0;`\n+                    inputTokenAmount = 1;\n                 }\n             }\n         }\n",
    "id": "154",
    "name": "mutants/154/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// DeleteExpressionMutation(`minOut = (minOut * (10000 - minSlippageBps)) / 10000` |==> `assert(true)`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    assert(true);\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "155",
    "name": "mutants/155/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// AssignmentMutation(`(minOut * (10000 - minSlippageBps)) / 10000` |==> `0`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = 0;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "156",
    "name": "mutants/156/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// AssignmentMutation(`(minOut * (10000 - minSlippageBps)) / 10000` |==> `1`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = 1;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "157",
    "name": "mutants/157/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`/` |==> `+`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000 - minSlippageBps))+10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "158",
    "name": "mutants/158/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`/` |==> `-`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000 - minSlippageBps))-10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "159",
    "name": "mutants/159/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`/` |==> `*`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000 - minSlippageBps))*10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "160",
    "name": "mutants/160/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`/` |==> `%`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000 - minSlippageBps))%10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "161",
    "name": "mutants/161/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`/` |==> `**`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000 - minSlippageBps))**10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "162",
    "name": "mutants/162/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// SwapArgumentsOperatorMutation(`(minOut * (10000 - minSlippageBps)) / 10000` |==> `10000 / (minOut * (10000 - minSlippageBps))`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = 10000 / (minOut * (10000 - minSlippageBps));\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "163",
    "name": "mutants/163/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`*` |==> `+`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut+(10000 - minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "164",
    "name": "mutants/164/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`*` |==> `-`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut-(10000 - minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "165",
    "name": "mutants/165/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`*` |==> `/`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut/(10000 - minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "166",
    "name": "mutants/166/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`*` |==> `%`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut%(10000 - minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "167",
    "name": "mutants/167/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`*` |==> `**`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut**(10000 - minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "168",
    "name": "mutants/168/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`-` |==> `+`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000+minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "169",
    "name": "mutants/169/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`-` |==> `*`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000*minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "170",
    "name": "mutants/170/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`-` |==> `/`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000/minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "171",
    "name": "mutants/171/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`-` |==> `%`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000%minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "172",
    "name": "mutants/172/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// BinaryOpMutation(`-` |==> `**`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (10000**minSlippageBps)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "173",
    "name": "mutants/173/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -333,7 +333,8 @@\n                 if (token0Amount > 0) {\n                     // Swap pool token to input token\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n-                    minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n+                    /// SwapArgumentsOperatorMutation(`10000 - minSlippageBps` |==> `minSlippageBps - 10000`) of: `minOut = (minOut * (10000 - minSlippageBps)) / 10000;`\n+                    minOut = (minOut * (minSlippageBps - 10000)) / 10000;\n                     \n                     poolTokens[0].approve(uniswapV3Router, token0Amount);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "174",
    "name": "mutants/174/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -335,7 +335,8 @@\n                     uint256 minOut = oracle.consult(address(poolTokens[0]), address(inputToken), token0Amount);\n                     minOut = (minOut * (10000 - minSlippageBps)) / 10000;\n                     \n-                    poolTokens[0].approve(uniswapV3Router, token0Amount);\n+                    /// DeleteExpressionMutation(`poolTokens[0].approve(uniswapV3Router, token0Amount)` |==> `assert(true)`) of: `poolTokens[0].approve(uniswapV3Router, token0Amount);`\n+                    assert(true);\n                     inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n                         IUniswapV3Router.ExactInputSingleParams({\n                             tokenIn: address(poolTokens[0]),\n",
    "id": "175",
    "name": "mutants/175/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -324,7 +324,8 @@\n             \n             // If input token is one of the pool tokens, remove liquidity to that token\n             if (inputTokenIndex != type(uint256).max) {\n-                inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);\n+                /// DeleteExpressionMutation(`inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0)` |==> `assert(true)`) of: `inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);`\n+                assert(true);\n             } else {\n                 // Input token is not in the pool, need to remove liquidity and swap\n                 // For simplicity, remove to the first token and swap\n",
    "id": "176",
    "name": "mutants/176/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -324,7 +324,8 @@\n             \n             // If input token is one of the pool tokens, remove liquidity to that token\n             if (inputTokenIndex != type(uint256).max) {\n-                inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);\n+                /// AssignmentMutation(`ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0)` |==> `0`) of: `inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);`\n+                inputTokenAmount = 0;\n             } else {\n                 // Input token is not in the pool, need to remove liquidity and swap\n                 // For simplicity, remove to the first token and swap\n",
    "id": "177",
    "name": "mutants/177/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -324,7 +324,8 @@\n             \n             // If input token is one of the pool tokens, remove liquidity to that token\n             if (inputTokenIndex != type(uint256).max) {\n-                inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);\n+                /// AssignmentMutation(`ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0)` |==> `1`) of: `inputTokenAmount = ICurvePool(curvePool).remove_liquidity_one_coin(lpAmountToWithdraw, int128(int256(inputTokenIndex)), 0);`\n+                inputTokenAmount = 1;\n             } else {\n                 // Input token is not in the pool, need to remove liquidity and swap\n                 // For simplicity, remove to the first token and swap\n",
    "id": "178",
    "name": "mutants/178/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -354,7 +354,8 @@\n         }\n \n         // Claim rewards during withdrawal\n-        flaxValue = _claimAndSellRewards();\n+        /// DeleteExpressionMutation(`flaxValue = _claimAndSellRewards()` |==> `assert(true)`) of: `flaxValue = _claimAndSellRewards();`\n+        assert(true);\n         \n         // Update TWAP oracle after withdrawal - REMOVED\n     }\n",
    "id": "179",
    "name": "mutants/179/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -354,7 +354,8 @@\n         }\n \n         // Claim rewards during withdrawal\n-        flaxValue = _claimAndSellRewards();\n+        /// AssignmentMutation(`_claimAndSellRewards()` |==> `0`) of: `flaxValue = _claimAndSellRewards();`\n+        flaxValue = 0;\n         \n         // Update TWAP oracle after withdrawal - REMOVED\n     }\n",
    "id": "180",
    "name": "mutants/180/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -354,7 +354,8 @@\n         }\n \n         // Claim rewards during withdrawal\n-        flaxValue = _claimAndSellRewards();\n+        /// AssignmentMutation(`_claimAndSellRewards()` |==> `1`) of: `flaxValue = _claimAndSellRewards();`\n+        flaxValue = 1;\n         \n         // Update TWAP oracle after withdrawal - REMOVED\n     }\n",
    "id": "181",
    "name": "mutants/181/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -370,7 +370,8 @@\n         \n         // Check if this is the first reward token being claimed\n         // If so, claim all rewards from Convex\n-        if (token == rewardTokens[0]) {\n+        /// IfStatementMutation(`token == rewardTokens[0]` |==> `true`) of: `if (token == rewardTokens[0]) {`\n+        if (true) {\n             IConvexRewardPool(convexRewardPool).getReward();\n         }\n         // Return balance of specific reward token\n",
    "id": "182",
    "name": "mutants/182/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -370,7 +370,8 @@\n         \n         // Check if this is the first reward token being claimed\n         // If so, claim all rewards from Convex\n-        if (token == rewardTokens[0]) {\n+        /// IfStatementMutation(`token == rewardTokens[0]` |==> `false`) of: `if (token == rewardTokens[0]) {`\n+        if (false) {\n             IConvexRewardPool(convexRewardPool).getReward();\n         }\n         // Return balance of specific reward token\n",
    "id": "183",
    "name": "mutants/183/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -371,7 +371,8 @@\n         // Check if this is the first reward token being claimed\n         // If so, claim all rewards from Convex\n         if (token == rewardTokens[0]) {\n-            IConvexRewardPool(convexRewardPool).getReward();\n+            /// DeleteExpressionMutation(`IConvexRewardPool(convexRewardPool).getReward()` |==> `assert(true)`) of: `IConvexRewardPool(convexRewardPool).getReward();`\n+            assert(true);\n         }\n         // Return balance of specific reward token\n         return IERC20(token).balanceOf(address(this));\n",
    "id": "184",
    "name": "mutants/184/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -385,7 +385,8 @@\n      * @dev Uses TWAP oracle for slippage protection\n      */\n     function _sellRewardToken(address token, uint256 amount) internal override returns (uint256 ethAmount) {\n-        if (amount == 0) return 0;\n+        /// IfStatementMutation(`amount == 0` |==> `true`) of: `if (amount == 0) return 0;`\n+        if (true) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n         minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "185",
    "name": "mutants/185/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -385,7 +385,8 @@\n      * @dev Uses TWAP oracle for slippage protection\n      */\n     function _sellRewardToken(address token, uint256 amount) internal override returns (uint256 ethAmount) {\n-        if (amount == 0) return 0;\n+        /// IfStatementMutation(`amount == 0` |==> `false`) of: `if (amount == 0) return 0;`\n+        if (false) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n         minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "186",
    "name": "mutants/186/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// DeleteExpressionMutation(`minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000` |==> `assert(true)`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        assert(true);\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "187",
    "name": "mutants/187/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// AssignmentMutation(`(minEthOut * (10000 - minSlippageBps)) / 10000` |==> `0`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = 0;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "188",
    "name": "mutants/188/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// AssignmentMutation(`(minEthOut * (10000 - minSlippageBps)) / 10000` |==> `1`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = 1;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "189",
    "name": "mutants/189/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `+`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000 - minSlippageBps))+10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "190",
    "name": "mutants/190/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `-`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000 - minSlippageBps))-10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "191",
    "name": "mutants/191/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `*`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000 - minSlippageBps))*10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "192",
    "name": "mutants/192/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `%`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000 - minSlippageBps))%10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "193",
    "name": "mutants/193/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `**`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000 - minSlippageBps))**10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "194",
    "name": "mutants/194/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// SwapArgumentsOperatorMutation(`(minEthOut * (10000 - minSlippageBps)) / 10000` |==> `10000 / (minEthOut * (10000 - minSlippageBps))`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = 10000 / (minEthOut * (10000 - minSlippageBps));\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "195",
    "name": "mutants/195/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `+`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut+(10000 - minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "196",
    "name": "mutants/196/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `-`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut-(10000 - minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "197",
    "name": "mutants/197/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `/`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut/(10000 - minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "198",
    "name": "mutants/198/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `%`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut%(10000 - minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "199",
    "name": "mutants/199/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `**`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut**(10000 - minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "200",
    "name": "mutants/200/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `+`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000+minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "201",
    "name": "mutants/201/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `*`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000*minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "202",
    "name": "mutants/202/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `/`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000/minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "203",
    "name": "mutants/203/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `%`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000%minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "204",
    "name": "mutants/204/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `**`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (10000**minSlippageBps)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "205",
    "name": "mutants/205/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -388,7 +388,8 @@\n         if (amount == 0) return 0;\n         \n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n-        minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n+        /// SwapArgumentsOperatorMutation(`10000 - minSlippageBps` |==> `minSlippageBps - 10000`) of: `minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;`\n+        minEthOut = (minEthOut * (minSlippageBps - 10000)) / 10000;\n \n         IERC20(token).approve(uniswapV3Router, amount);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n",
    "id": "206",
    "name": "mutants/206/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -390,7 +390,8 @@\n         uint256 minEthOut = oracle.consult(token, address(0), amount);\n         minEthOut = (minEthOut * (10000 - minSlippageBps)) / 10000;\n \n-        IERC20(token).approve(uniswapV3Router, amount);\n+        /// DeleteExpressionMutation(`IERC20(token).approve(uniswapV3Router, amount)` |==> `assert(true)`) of: `IERC20(token).approve(uniswapV3Router, amount);`\n+        assert(true);\n         ethAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle(\n             IUniswapV3Router.ExactInputSingleParams({\n                 tokenIn: token,\n",
    "id": "207",
    "name": "mutants/207/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -412,7 +412,8 @@\n      * @dev IMPORTANT: Must send ETH value with the swap call when tokenIn is ETH (address(0))\n      */\n     function _sellEthForInputToken(uint256 ethAmount) internal override returns (uint256 inputTokenAmount) {\n-        if (ethAmount == 0) return 0;\n+        /// IfStatementMutation(`ethAmount == 0` |==> `true`) of: `if (ethAmount == 0) return 0;`\n+        if (true) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n         minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "208",
    "name": "mutants/208/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -412,7 +412,8 @@\n      * @dev IMPORTANT: Must send ETH value with the swap call when tokenIn is ETH (address(0))\n      */\n     function _sellEthForInputToken(uint256 ethAmount) internal override returns (uint256 inputTokenAmount) {\n-        if (ethAmount == 0) return 0;\n+        /// IfStatementMutation(`ethAmount == 0` |==> `false`) of: `if (ethAmount == 0) return 0;`\n+        if (false) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n         minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n",
    "id": "209",
    "name": "mutants/209/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// DeleteExpressionMutation(`minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000` |==> `assert(true)`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        assert(true);\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "210",
    "name": "mutants/210/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// AssignmentMutation(`(minInputOut * (10000 - minSlippageBps)) / 10000` |==> `0`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = 0;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "211",
    "name": "mutants/211/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// AssignmentMutation(`(minInputOut * (10000 - minSlippageBps)) / 10000` |==> `1`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = 1;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "212",
    "name": "mutants/212/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `+`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000 - minSlippageBps))+10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "213",
    "name": "mutants/213/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `-`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000 - minSlippageBps))-10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "214",
    "name": "mutants/214/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `*`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000 - minSlippageBps))*10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "215",
    "name": "mutants/215/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `%`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000 - minSlippageBps))%10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "216",
    "name": "mutants/216/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`/` |==> `**`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000 - minSlippageBps))**10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "217",
    "name": "mutants/217/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// SwapArgumentsOperatorMutation(`(minInputOut * (10000 - minSlippageBps)) / 10000` |==> `10000 / (minInputOut * (10000 - minSlippageBps))`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = 10000 / (minInputOut * (10000 - minSlippageBps));\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "218",
    "name": "mutants/218/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `+`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut+(10000 - minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "219",
    "name": "mutants/219/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `-`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut-(10000 - minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "220",
    "name": "mutants/220/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `/`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut/(10000 - minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "221",
    "name": "mutants/221/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `%`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut%(10000 - minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "222",
    "name": "mutants/222/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`*` |==> `**`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut**(10000 - minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "223",
    "name": "mutants/223/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `+`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000+minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "224",
    "name": "mutants/224/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `*`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000*minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "225",
    "name": "mutants/225/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `/`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000/minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "226",
    "name": "mutants/226/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `%`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000%minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "227",
    "name": "mutants/227/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// BinaryOpMutation(`-` |==> `**`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (10000**minSlippageBps)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "228",
    "name": "mutants/228/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -415,7 +415,8 @@\n         if (ethAmount == 0) return 0;\n         \n         uint256 minInputOut = oracle.consult(address(0), address(inputToken), ethAmount);\n-        minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;\n+        /// SwapArgumentsOperatorMutation(`10000 - minSlippageBps` |==> `minSlippageBps - 10000`) of: `minInputOut = (minInputOut * (10000 - minSlippageBps)) / 10000;`\n+        minInputOut = (minInputOut * (minSlippageBps - 10000)) / 10000;\n \n         inputTokenAmount = IUniswapV3Router(uniswapV3Router).exactInputSingle{value: ethAmount}(\n             IUniswapV3Router.ExactInputSingleParams({\n",
    "id": "229",
    "name": "mutants/229/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -440,7 +440,8 @@\n         (bool success, bytes memory data) = address(priceTilter).call{value: ethAmount}(\n             abi.encodeWithSignature(\"tiltPrice(address,uint256)\", address(flaxToken), ethAmount)\n         );\n-        require(success, \"Price tilt failed\");\n+        /// DeleteExpressionMutation(`require(success, \"Price tilt failed\")` |==> `assert(true)`) of: `require(success, \"Price tilt failed\");`\n+        assert(true);\n         flaxAmount = abi.decode(data, (uint256));\n     }\n \n",
    "id": "230",
    "name": "mutants/230/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -440,7 +440,8 @@\n         (bool success, bytes memory data) = address(priceTilter).call{value: ethAmount}(\n             abi.encodeWithSignature(\"tiltPrice(address,uint256)\", address(flaxToken), ethAmount)\n         );\n-        require(success, \"Price tilt failed\");\n+        /// RequireMutation(`success` |==> `true`) of: `require(success, \"Price tilt failed\");`\n+        require(true, \"Price tilt failed\");\n         flaxAmount = abi.decode(data, (uint256));\n     }\n \n",
    "id": "231",
    "name": "mutants/231/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -440,7 +440,8 @@\n         (bool success, bytes memory data) = address(priceTilter).call{value: ethAmount}(\n             abi.encodeWithSignature(\"tiltPrice(address,uint256)\", address(flaxToken), ethAmount)\n         );\n-        require(success, \"Price tilt failed\");\n+        /// RequireMutation(`success` |==> `false`) of: `require(success, \"Price tilt failed\");`\n+        require(false, \"Price tilt failed\");\n         flaxAmount = abi.decode(data, (uint256));\n     }\n \n",
    "id": "232",
    "name": "mutants/232/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -441,7 +441,8 @@\n             abi.encodeWithSignature(\"tiltPrice(address,uint256)\", address(flaxToken), ethAmount)\n         );\n         require(success, \"Price tilt failed\");\n-        flaxAmount = abi.decode(data, (uint256));\n+        /// DeleteExpressionMutation(`flaxAmount = abi.decode(data, (uint256))` |==> `assert(true)`) of: `flaxAmount = abi.decode(data, (uint256));`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "233",
    "name": "mutants/233/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -441,7 +441,8 @@\n             abi.encodeWithSignature(\"tiltPrice(address,uint256)\", address(flaxToken), ethAmount)\n         );\n         require(success, \"Price tilt failed\");\n-        flaxAmount = abi.decode(data, (uint256));\n+        /// AssignmentMutation(`abi.decode(data, (uint256))` |==> `0`) of: `flaxAmount = abi.decode(data, (uint256));`\n+        flaxAmount = 0;\n     }\n \n     /**\n",
    "id": "234",
    "name": "mutants/234/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -441,7 +441,8 @@\n             abi.encodeWithSignature(\"tiltPrice(address,uint256)\", address(flaxToken), ethAmount)\n         );\n         require(success, \"Price tilt failed\");\n-        flaxAmount = abi.decode(data, (uint256));\n+        /// AssignmentMutation(`abi.decode(data, (uint256))` |==> `1`) of: `flaxAmount = abi.decode(data, (uint256));`\n+        flaxAmount = 1;\n     }\n \n     /**\n",
    "id": "235",
    "name": "mutants/235/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -456,7 +456,8 @@\n         for (uint256 i = 0; i < rewardTokens.length; i++) {\n             address token = rewardTokens[i];\n             uint256 amount = _claimRewardToken(token);\n-            if (amount > 0) {\n+            /// IfStatementMutation(`amount > 0` |==> `true`) of: `if (amount > 0) {`\n+            if (true) {\n                 emit RewardClaimed(token, amount);\n                 ethAmount += _sellRewardToken(token, amount);\n                 emit RewardSold(token, amount, ethAmount);\n",
    "id": "236",
    "name": "mutants/236/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -456,7 +456,8 @@\n         for (uint256 i = 0; i < rewardTokens.length; i++) {\n             address token = rewardTokens[i];\n             uint256 amount = _claimRewardToken(token);\n-            if (amount > 0) {\n+            /// IfStatementMutation(`amount > 0` |==> `false`) of: `if (amount > 0) {`\n+            if (false) {\n                 emit RewardClaimed(token, amount);\n                 ethAmount += _sellRewardToken(token, amount);\n                 emit RewardSold(token, amount, ethAmount);\n",
    "id": "237",
    "name": "mutants/237/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -456,7 +456,8 @@\n         for (uint256 i = 0; i < rewardTokens.length; i++) {\n             address token = rewardTokens[i];\n             uint256 amount = _claimRewardToken(token);\n-            if (amount > 0) {\n+            /// SwapArgumentsOperatorMutation(`amount > 0` |==> `0 > amount`) of: `if (amount > 0) {`\n+            if (0 > amount) {\n                 emit RewardClaimed(token, amount);\n                 ethAmount += _sellRewardToken(token, amount);\n                 emit RewardSold(token, amount, ethAmount);\n",
    "id": "238",
    "name": "mutants/238/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -458,7 +458,8 @@\n             uint256 amount = _claimRewardToken(token);\n             if (amount > 0) {\n                 emit RewardClaimed(token, amount);\n-                ethAmount += _sellRewardToken(token, amount);\n+                /// DeleteExpressionMutation(`ethAmount += _sellRewardToken(token, amount)` |==> `assert(true)`) of: `ethAmount += _sellRewardToken(token, amount);`\n+                assert(true);\n                 emit RewardSold(token, amount, ethAmount);\n             }\n         }\n",
    "id": "239",
    "name": "mutants/239/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -458,7 +458,8 @@\n             uint256 amount = _claimRewardToken(token);\n             if (amount > 0) {\n                 emit RewardClaimed(token, amount);\n-                ethAmount += _sellRewardToken(token, amount);\n+                /// AssignmentMutation(`_sellRewardToken(token, amount)` |==> `0`) of: `ethAmount += _sellRewardToken(token, amount);`\n+                ethAmount += 0;\n                 emit RewardSold(token, amount, ethAmount);\n             }\n         }\n",
    "id": "240",
    "name": "mutants/240/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -458,7 +458,8 @@\n             uint256 amount = _claimRewardToken(token);\n             if (amount > 0) {\n                 emit RewardClaimed(token, amount);\n-                ethAmount += _sellRewardToken(token, amount);\n+                /// AssignmentMutation(`_sellRewardToken(token, amount)` |==> `1`) of: `ethAmount += _sellRewardToken(token, amount);`\n+                ethAmount += 1;\n                 emit RewardSold(token, amount, ethAmount);\n             }\n         }\n",
    "id": "241",
    "name": "mutants/241/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -453,7 +453,8 @@\n         // Update TWAP oracle before claiming rewards - REMOVED (handled by AYieldSource.withdraw or AYieldSource.claimRewards)\n         \n         uint256 ethAmount;\n-        for (uint256 i = 0; i < rewardTokens.length; i++) {\n+        /// SwapArgumentsOperatorMutation(`i < rewardTokens.length` |==> `rewardTokens.length < i`) of: `for (uint256 i = 0; i < rewardTokens.length; i++) {`\n+        for (uint256 i = 0; rewardTokens.length < i; i++) {\n             address token = rewardTokens[i];\n             uint256 amount = _claimRewardToken(token);\n             if (amount > 0) {\n",
    "id": "242",
    "name": "mutants/242/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -453,7 +453,8 @@\n         // Update TWAP oracle before claiming rewards - REMOVED (handled by AYieldSource.withdraw or AYieldSource.claimRewards)\n         \n         uint256 ethAmount;\n-        for (uint256 i = 0; i < rewardTokens.length; i++) {\n+        /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < rewardTokens.length; i++) {`\n+        for (uint256 i = 0; i < rewardTokens.length; assert(true)) {\n             address token = rewardTokens[i];\n             uint256 amount = _claimRewardToken(token);\n             if (amount > 0) {\n",
    "id": "243",
    "name": "mutants/243/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -453,7 +453,8 @@\n         // Update TWAP oracle before claiming rewards - REMOVED (handled by AYieldSource.withdraw or AYieldSource.claimRewards)\n         \n         uint256 ethAmount;\n-        for (uint256 i = 0; i < rewardTokens.length; i++) {\n+        /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < rewardTokens.length; i++) {`\n+        for (uint256 i = 0; i < rewardTokens.length; i--) {\n             address token = rewardTokens[i];\n             uint256 amount = _claimRewardToken(token);\n             if (amount > 0) {\n",
    "id": "244",
    "name": "mutants/244/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -462,7 +462,8 @@\n                 emit RewardSold(token, amount, ethAmount);\n             }\n         }\n-        if (ethAmount > 0) {\n+        /// IfStatementMutation(`ethAmount > 0` |==> `true`) of: `if (ethAmount > 0) {`\n+        if (true) {\n             flaxValue = _getFlaxValue(ethAmount);\n             emit FlaxValueCalculated(ethAmount, flaxValue);\n         }\n",
    "id": "245",
    "name": "mutants/245/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -462,7 +462,8 @@\n                 emit RewardSold(token, amount, ethAmount);\n             }\n         }\n-        if (ethAmount > 0) {\n+        /// IfStatementMutation(`ethAmount > 0` |==> `false`) of: `if (ethAmount > 0) {`\n+        if (false) {\n             flaxValue = _getFlaxValue(ethAmount);\n             emit FlaxValueCalculated(ethAmount, flaxValue);\n         }\n",
    "id": "246",
    "name": "mutants/246/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -462,7 +462,8 @@\n                 emit RewardSold(token, amount, ethAmount);\n             }\n         }\n-        if (ethAmount > 0) {\n+        /// SwapArgumentsOperatorMutation(`ethAmount > 0` |==> `0 > ethAmount`) of: `if (ethAmount > 0) {`\n+        if (0 > ethAmount) {\n             flaxValue = _getFlaxValue(ethAmount);\n             emit FlaxValueCalculated(ethAmount, flaxValue);\n         }\n",
    "id": "247",
    "name": "mutants/247/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -463,7 +463,8 @@\n             }\n         }\n         if (ethAmount > 0) {\n-            flaxValue = _getFlaxValue(ethAmount);\n+            /// DeleteExpressionMutation(`flaxValue = _getFlaxValue(ethAmount)` |==> `assert(true)`) of: `flaxValue = _getFlaxValue(ethAmount);`\n+            assert(true);\n             emit FlaxValueCalculated(ethAmount, flaxValue);\n         }\n         \n",
    "id": "248",
    "name": "mutants/248/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -463,7 +463,8 @@\n             }\n         }\n         if (ethAmount > 0) {\n-            flaxValue = _getFlaxValue(ethAmount);\n+            /// AssignmentMutation(`_getFlaxValue(ethAmount)` |==> `0`) of: `flaxValue = _getFlaxValue(ethAmount);`\n+            flaxValue = 0;\n             emit FlaxValueCalculated(ethAmount, flaxValue);\n         }\n         \n",
    "id": "249",
    "name": "mutants/249/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -463,7 +463,8 @@\n             }\n         }\n         if (ethAmount > 0) {\n-            flaxValue = _getFlaxValue(ethAmount);\n+            /// AssignmentMutation(`_getFlaxValue(ethAmount)` |==> `1`) of: `flaxValue = _getFlaxValue(ethAmount);`\n+            flaxValue = 1;\n             emit FlaxValueCalculated(ethAmount, flaxValue);\n         }\n         \n",
    "id": "250",
    "name": "mutants/250/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -479,7 +479,8 @@\n     function _addLiquidityToCurve(uint256[] memory amounts) private returns (uint256 lpAmount) {\n         bytes memory data;\n         \n-        if (numPoolTokens == 2) {\n+        /// IfStatementMutation(`numPoolTokens == 2` |==> `true`) of: `if (numPoolTokens == 2) {`\n+        if (true) {\n             uint256[2] memory amounts2;\n             amounts2[0] = amounts[0];\n             amounts2[1] = amounts[1];\n",
    "id": "251",
    "name": "mutants/251/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -479,7 +479,8 @@\n     function _addLiquidityToCurve(uint256[] memory amounts) private returns (uint256 lpAmount) {\n         bytes memory data;\n         \n-        if (numPoolTokens == 2) {\n+        /// IfStatementMutation(`numPoolTokens == 2` |==> `false`) of: `if (numPoolTokens == 2) {`\n+        if (false) {\n             uint256[2] memory amounts2;\n             amounts2[0] = amounts[0];\n             amounts2[1] = amounts[1];\n",
    "id": "252",
    "name": "mutants/252/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -484,7 +484,8 @@\n             amounts2[0] = amounts[0];\n             amounts2[1] = amounts[1];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n-        } else if (numPoolTokens == 3) {\n+        /// IfStatementMutation(`numPoolTokens == 3` |==> `true`) of: `} else if (numPoolTokens == 3) {`\n+        } else if (true) {\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n             amounts3[1] = amounts[1];\n",
    "id": "253",
    "name": "mutants/253/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -484,7 +484,8 @@\n             amounts2[0] = amounts[0];\n             amounts2[1] = amounts[1];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n-        } else if (numPoolTokens == 3) {\n+        /// IfStatementMutation(`numPoolTokens == 3` |==> `false`) of: `} else if (numPoolTokens == 3) {`\n+        } else if (false) {\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n             amounts3[1] = amounts[1];\n",
    "id": "254",
    "name": "mutants/254/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -490,7 +490,8 @@\n             amounts3[1] = amounts[1];\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n-        } else if (numPoolTokens == 4) {\n+        /// IfStatementMutation(`numPoolTokens == 4` |==> `true`) of: `} else if (numPoolTokens == 4) {`\n+        } else if (true) {\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n",
    "id": "255",
    "name": "mutants/255/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -490,7 +490,8 @@\n             amounts3[1] = amounts[1];\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n-        } else if (numPoolTokens == 4) {\n+        /// IfStatementMutation(`numPoolTokens == 4` |==> `false`) of: `} else if (numPoolTokens == 4) {`\n+        } else if (false) {\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n",
    "id": "256",
    "name": "mutants/256/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -498,7 +498,8 @@\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n-            revert(\"Unsupported pool size\");\n+            /// DeleteExpressionMutation(`revert(\"Unsupported pool size\")` |==> `assert(true)`) of: `revert(\"Unsupported pool size\");`\n+            assert(true);\n         }\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n",
    "id": "257",
    "name": "mutants/257/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -492,7 +492,8 @@\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n-            amounts4[0] = amounts[0];\n+            /// DeleteExpressionMutation(`amounts4[0] = amounts[0]` |==> `assert(true)`) of: `amounts4[0] = amounts[0];`\n+            assert(true);\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n",
    "id": "258",
    "name": "mutants/258/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -492,7 +492,8 @@\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n-            amounts4[0] = amounts[0];\n+            /// AssignmentMutation(`amounts[0]` |==> `0`) of: `amounts4[0] = amounts[0];`\n+            amounts4[0] = 0;\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n",
    "id": "259",
    "name": "mutants/259/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -492,7 +492,8 @@\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n-            amounts4[0] = amounts[0];\n+            /// AssignmentMutation(`amounts[0]` |==> `1`) of: `amounts4[0] = amounts[0];`\n+            amounts4[0] = 1;\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n",
    "id": "260",
    "name": "mutants/260/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -493,7 +493,8 @@\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n-            amounts4[1] = amounts[1];\n+            /// DeleteExpressionMutation(`amounts4[1] = amounts[1]` |==> `assert(true)`) of: `amounts4[1] = amounts[1];`\n+            assert(true);\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n",
    "id": "261",
    "name": "mutants/261/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -493,7 +493,8 @@\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n-            amounts4[1] = amounts[1];\n+            /// AssignmentMutation(`amounts[1]` |==> `0`) of: `amounts4[1] = amounts[1];`\n+            amounts4[1] = 0;\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n",
    "id": "262",
    "name": "mutants/262/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -493,7 +493,8 @@\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n-            amounts4[1] = amounts[1];\n+            /// AssignmentMutation(`amounts[1]` |==> `1`) of: `amounts4[1] = amounts[1];`\n+            amounts4[1] = 1;\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n",
    "id": "263",
    "name": "mutants/263/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -494,7 +494,8 @@\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n-            amounts4[2] = amounts[2];\n+            /// DeleteExpressionMutation(`amounts4[2] = amounts[2]` |==> `assert(true)`) of: `amounts4[2] = amounts[2];`\n+            assert(true);\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n",
    "id": "264",
    "name": "mutants/264/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -494,7 +494,8 @@\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n-            amounts4[2] = amounts[2];\n+            /// AssignmentMutation(`amounts[2]` |==> `0`) of: `amounts4[2] = amounts[2];`\n+            amounts4[2] = 0;\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n",
    "id": "265",
    "name": "mutants/265/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -494,7 +494,8 @@\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n-            amounts4[2] = amounts[2];\n+            /// AssignmentMutation(`amounts[2]` |==> `1`) of: `amounts4[2] = amounts[2];`\n+            amounts4[2] = 1;\n             amounts4[3] = amounts[3];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n",
    "id": "266",
    "name": "mutants/266/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -495,7 +495,8 @@\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n-            amounts4[3] = amounts[3];\n+            /// DeleteExpressionMutation(`amounts4[3] = amounts[3]` |==> `assert(true)`) of: `amounts4[3] = amounts[3];`\n+            assert(true);\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n             revert(\"Unsupported pool size\");\n",
    "id": "267",
    "name": "mutants/267/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -495,7 +495,8 @@\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n-            amounts4[3] = amounts[3];\n+            /// AssignmentMutation(`amounts[3]` |==> `0`) of: `amounts4[3] = amounts[3];`\n+            amounts4[3] = 0;\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n             revert(\"Unsupported pool size\");\n",
    "id": "268",
    "name": "mutants/268/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -495,7 +495,8 @@\n             amounts4[0] = amounts[0];\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n-            amounts4[3] = amounts[3];\n+            /// AssignmentMutation(`amounts[3]` |==> `1`) of: `amounts4[3] = amounts[3];`\n+            amounts4[3] = 1;\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n         } else {\n             revert(\"Unsupported pool size\");\n",
    "id": "269",
    "name": "mutants/269/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -496,7 +496,8 @@\n             amounts4[1] = amounts[1];\n             amounts4[2] = amounts[2];\n             amounts4[3] = amounts[3];\n-            data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);\n+            /// DeleteExpressionMutation(`data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0)` |==> `assert(true)`) of: `data = abi.encodeWithSignature(\"add_liquidity(uint256[4],uint256)\", amounts4, 0);`\n+            assert(true);\n         } else {\n             revert(\"Unsupported pool size\");\n         }\n",
    "id": "270",
    "name": "mutants/270/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -486,7 +486,8 @@\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n-            amounts3[0] = amounts[0];\n+            /// DeleteExpressionMutation(`amounts3[0] = amounts[0]` |==> `assert(true)`) of: `amounts3[0] = amounts[0];`\n+            assert(true);\n             amounts3[1] = amounts[1];\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n",
    "id": "271",
    "name": "mutants/271/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -486,7 +486,8 @@\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n-            amounts3[0] = amounts[0];\n+            /// AssignmentMutation(`amounts[0]` |==> `0`) of: `amounts3[0] = amounts[0];`\n+            amounts3[0] = 0;\n             amounts3[1] = amounts[1];\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n",
    "id": "272",
    "name": "mutants/272/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -486,7 +486,8 @@\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n-            amounts3[0] = amounts[0];\n+            /// AssignmentMutation(`amounts[0]` |==> `1`) of: `amounts3[0] = amounts[0];`\n+            amounts3[0] = 1;\n             amounts3[1] = amounts[1];\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n",
    "id": "273",
    "name": "mutants/273/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -487,7 +487,8 @@\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n-            amounts3[1] = amounts[1];\n+            /// DeleteExpressionMutation(`amounts3[1] = amounts[1]` |==> `assert(true)`) of: `amounts3[1] = amounts[1];`\n+            assert(true);\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n",
    "id": "274",
    "name": "mutants/274/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -487,7 +487,8 @@\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n-            amounts3[1] = amounts[1];\n+            /// AssignmentMutation(`amounts[1]` |==> `0`) of: `amounts3[1] = amounts[1];`\n+            amounts3[1] = 0;\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n",
    "id": "275",
    "name": "mutants/275/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -487,7 +487,8 @@\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n-            amounts3[1] = amounts[1];\n+            /// AssignmentMutation(`amounts[1]` |==> `1`) of: `amounts3[1] = amounts[1];`\n+            amounts3[1] = 1;\n             amounts3[2] = amounts[2];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n",
    "id": "276",
    "name": "mutants/276/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -488,7 +488,8 @@\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n             amounts3[1] = amounts[1];\n-            amounts3[2] = amounts[2];\n+            /// DeleteExpressionMutation(`amounts3[2] = amounts[2]` |==> `assert(true)`) of: `amounts3[2] = amounts[2];`\n+            assert(true);\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n",
    "id": "277",
    "name": "mutants/277/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -488,7 +488,8 @@\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n             amounts3[1] = amounts[1];\n-            amounts3[2] = amounts[2];\n+            /// AssignmentMutation(`amounts[2]` |==> `0`) of: `amounts3[2] = amounts[2];`\n+            amounts3[2] = 0;\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n",
    "id": "278",
    "name": "mutants/278/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -488,7 +488,8 @@\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n             amounts3[1] = amounts[1];\n-            amounts3[2] = amounts[2];\n+            /// AssignmentMutation(`amounts[2]` |==> `1`) of: `amounts3[2] = amounts[2];`\n+            amounts3[2] = 1;\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n",
    "id": "279",
    "name": "mutants/279/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -489,7 +489,8 @@\n             amounts3[0] = amounts[0];\n             amounts3[1] = amounts[1];\n             amounts3[2] = amounts[2];\n-            data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);\n+            /// DeleteExpressionMutation(`data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0)` |==> `assert(true)`) of: `data = abi.encodeWithSignature(\"add_liquidity(uint256[3],uint256)\", amounts3, 0);`\n+            assert(true);\n         } else if (numPoolTokens == 4) {\n             uint256[4] memory amounts4;\n             amounts4[0] = amounts[0];\n",
    "id": "280",
    "name": "mutants/280/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -481,7 +481,8 @@\n         \n         if (numPoolTokens == 2) {\n             uint256[2] memory amounts2;\n-            amounts2[0] = amounts[0];\n+            /// DeleteExpressionMutation(`amounts2[0] = amounts[0]` |==> `assert(true)`) of: `amounts2[0] = amounts[0];`\n+            assert(true);\n             amounts2[1] = amounts[1];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n",
    "id": "281",
    "name": "mutants/281/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -481,7 +481,8 @@\n         \n         if (numPoolTokens == 2) {\n             uint256[2] memory amounts2;\n-            amounts2[0] = amounts[0];\n+            /// AssignmentMutation(`amounts[0]` |==> `0`) of: `amounts2[0] = amounts[0];`\n+            amounts2[0] = 0;\n             amounts2[1] = amounts[1];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n",
    "id": "282",
    "name": "mutants/282/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -481,7 +481,8 @@\n         \n         if (numPoolTokens == 2) {\n             uint256[2] memory amounts2;\n-            amounts2[0] = amounts[0];\n+            /// AssignmentMutation(`amounts[0]` |==> `1`) of: `amounts2[0] = amounts[0];`\n+            amounts2[0] = 1;\n             amounts2[1] = amounts[1];\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n",
    "id": "283",
    "name": "mutants/283/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -482,7 +482,8 @@\n         if (numPoolTokens == 2) {\n             uint256[2] memory amounts2;\n             amounts2[0] = amounts[0];\n-            amounts2[1] = amounts[1];\n+            /// DeleteExpressionMutation(`amounts2[1] = amounts[1]` |==> `assert(true)`) of: `amounts2[1] = amounts[1];`\n+            assert(true);\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n",
    "id": "284",
    "name": "mutants/284/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -482,7 +482,8 @@\n         if (numPoolTokens == 2) {\n             uint256[2] memory amounts2;\n             amounts2[0] = amounts[0];\n-            amounts2[1] = amounts[1];\n+            /// AssignmentMutation(`amounts[1]` |==> `0`) of: `amounts2[1] = amounts[1];`\n+            amounts2[1] = 0;\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n",
    "id": "285",
    "name": "mutants/285/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -482,7 +482,8 @@\n         if (numPoolTokens == 2) {\n             uint256[2] memory amounts2;\n             amounts2[0] = amounts[0];\n-            amounts2[1] = amounts[1];\n+            /// AssignmentMutation(`amounts[1]` |==> `1`) of: `amounts2[1] = amounts[1];`\n+            amounts2[1] = 1;\n             data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n",
    "id": "286",
    "name": "mutants/286/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -483,7 +483,8 @@\n             uint256[2] memory amounts2;\n             amounts2[0] = amounts[0];\n             amounts2[1] = amounts[1];\n-            data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);\n+            /// DeleteExpressionMutation(`data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0)` |==> `assert(true)`) of: `data = abi.encodeWithSignature(\"add_liquidity(uint256[2],uint256)\", amounts2, 0);`\n+            assert(true);\n         } else if (numPoolTokens == 3) {\n             uint256[3] memory amounts3;\n             amounts3[0] = amounts[0];\n",
    "id": "287",
    "name": "mutants/287/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -502,7 +502,8 @@\n         }\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n-        require(success, \"add_liquidity failed\");\n+        /// DeleteExpressionMutation(`require(success, \"add_liquidity failed\")` |==> `assert(true)`) of: `require(success, \"add_liquidity failed\");`\n+        assert(true);\n         lpAmount = abi.decode(result, (uint256));\n     }\n \n",
    "id": "288",
    "name": "mutants/288/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -502,7 +502,8 @@\n         }\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n-        require(success, \"add_liquidity failed\");\n+        /// RequireMutation(`success` |==> `true`) of: `require(success, \"add_liquidity failed\");`\n+        require(true, \"add_liquidity failed\");\n         lpAmount = abi.decode(result, (uint256));\n     }\n \n",
    "id": "289",
    "name": "mutants/289/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -502,7 +502,8 @@\n         }\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n-        require(success, \"add_liquidity failed\");\n+        /// RequireMutation(`success` |==> `false`) of: `require(success, \"add_liquidity failed\");`\n+        require(false, \"add_liquidity failed\");\n         lpAmount = abi.decode(result, (uint256));\n     }\n \n",
    "id": "290",
    "name": "mutants/290/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -503,7 +503,8 @@\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n         require(success, \"add_liquidity failed\");\n-        lpAmount = abi.decode(result, (uint256));\n+        /// DeleteExpressionMutation(`lpAmount = abi.decode(result, (uint256))` |==> `assert(true)`) of: `lpAmount = abi.decode(result, (uint256));`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "291",
    "name": "mutants/291/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -503,7 +503,8 @@\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n         require(success, \"add_liquidity failed\");\n-        lpAmount = abi.decode(result, (uint256));\n+        /// AssignmentMutation(`abi.decode(result, (uint256))` |==> `0`) of: `lpAmount = abi.decode(result, (uint256));`\n+        lpAmount = 0;\n     }\n \n     /**\n",
    "id": "292",
    "name": "mutants/292/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -503,7 +503,8 @@\n         \n         (bool success, bytes memory result) = curvePool.call(data);\n         require(success, \"add_liquidity failed\");\n-        lpAmount = abi.decode(result, (uint256));\n+        /// AssignmentMutation(`abi.decode(result, (uint256))` |==> `1`) of: `lpAmount = abi.decode(result, (uint256));`\n+        lpAmount = 1;\n     }\n \n     /**\n",
    "id": "293",
    "name": "mutants/293/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -518,7 +518,8 @@\n      * @dev Only callable by owner for emergency recovery\n      */\n     function emergencyWithdraw(address token, address recipient) external onlyOwner {\n-        if (token == address(0)) {\n+        /// IfStatementMutation(`token == address(0)` |==> `true`) of: `if (token == address(0)) {`\n+        if (true) {\n             // Withdraw ETH\n             uint256 balance = address(this).balance;\n             if (balance > 0) {\n",
    "id": "294",
    "name": "mutants/294/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -518,7 +518,8 @@\n      * @dev Only callable by owner for emergency recovery\n      */\n     function emergencyWithdraw(address token, address recipient) external onlyOwner {\n-        if (token == address(0)) {\n+        /// IfStatementMutation(`token == address(0)` |==> `false`) of: `if (token == address(0)) {`\n+        if (false) {\n             // Withdraw ETH\n             uint256 balance = address(this).balance;\n             if (balance > 0) {\n",
    "id": "295",
    "name": "mutants/295/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -528,7 +528,8 @@\n             // Withdraw ERC20 token\n             IERC20 erc20 = IERC20(token);\n             uint256 balance = erc20.balanceOf(address(this));\n-            if (balance > 0) {\n+            /// IfStatementMutation(`balance > 0` |==> `true`) of: `if (balance > 0) {`\n+            if (true) {\n                 erc20.safeTransfer(recipient, balance);\n             }\n         }\n",
    "id": "296",
    "name": "mutants/296/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -528,7 +528,8 @@\n             // Withdraw ERC20 token\n             IERC20 erc20 = IERC20(token);\n             uint256 balance = erc20.balanceOf(address(this));\n-            if (balance > 0) {\n+            /// IfStatementMutation(`balance > 0` |==> `false`) of: `if (balance > 0) {`\n+            if (false) {\n                 erc20.safeTransfer(recipient, balance);\n             }\n         }\n",
    "id": "297",
    "name": "mutants/297/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -528,7 +528,8 @@\n             // Withdraw ERC20 token\n             IERC20 erc20 = IERC20(token);\n             uint256 balance = erc20.balanceOf(address(this));\n-            if (balance > 0) {\n+            /// SwapArgumentsOperatorMutation(`balance > 0` |==> `0 > balance`) of: `if (balance > 0) {`\n+            if (0 > balance) {\n                 erc20.safeTransfer(recipient, balance);\n             }\n         }\n",
    "id": "298",
    "name": "mutants/298/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -529,7 +529,8 @@\n             IERC20 erc20 = IERC20(token);\n             uint256 balance = erc20.balanceOf(address(this));\n             if (balance > 0) {\n-                erc20.safeTransfer(recipient, balance);\n+                /// DeleteExpressionMutation(`erc20.safeTransfer(recipient, balance)` |==> `assert(true)`) of: `erc20.safeTransfer(recipient, balance);`\n+                assert(true);\n             }\n         }\n     }\n",
    "id": "299",
    "name": "mutants/299/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -521,7 +521,8 @@\n         if (token == address(0)) {\n             // Withdraw ETH\n             uint256 balance = address(this).balance;\n-            if (balance > 0) {\n+            /// IfStatementMutation(`balance > 0` |==> `true`) of: `if (balance > 0) {`\n+            if (true) {\n                 payable(recipient).transfer(balance);\n             }\n         } else {\n",
    "id": "300",
    "name": "mutants/300/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -521,7 +521,8 @@\n         if (token == address(0)) {\n             // Withdraw ETH\n             uint256 balance = address(this).balance;\n-            if (balance > 0) {\n+            /// IfStatementMutation(`balance > 0` |==> `false`) of: `if (balance > 0) {`\n+            if (false) {\n                 payable(recipient).transfer(balance);\n             }\n         } else {\n",
    "id": "301",
    "name": "mutants/301/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -521,7 +521,8 @@\n         if (token == address(0)) {\n             // Withdraw ETH\n             uint256 balance = address(this).balance;\n-            if (balance > 0) {\n+            /// SwapArgumentsOperatorMutation(`balance > 0` |==> `0 > balance`) of: `if (balance > 0) {`\n+            if (0 > balance) {\n                 payable(recipient).transfer(balance);\n             }\n         } else {\n",
    "id": "302",
    "name": "mutants/302/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -522,7 +522,8 @@\n             // Withdraw ETH\n             uint256 balance = address(this).balance;\n             if (balance > 0) {\n-                payable(recipient).transfer(balance);\n+                /// DeleteExpressionMutation(`payable(recipient).transfer(balance)` |==> `assert(true)`) of: `payable(recipient).transfer(balance);`\n+                assert(true);\n             }\n         } else {\n             // Withdraw ERC20 token\n",
    "id": "303",
    "name": "mutants/303/src/yieldSource/CVX_CRV_YieldSource.sol",
    "original": "src/yieldSource/CVX_CRV_YieldSource.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  }
]