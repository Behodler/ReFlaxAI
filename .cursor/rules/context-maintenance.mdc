---
description: 
globs: 
alwaysApply: true
---
In the directory called promptEngineering, there's a markdown file called ReFlaxPromptTemplate.markdown

For brevity, let's refer to this file as ContextFile. ContextFile provides an overview of the project. Whenever I make a query or request a feature, I'd like the following workflow to be observed (numbered below). Please note that I used the word task to cover any request I make:

1. Read ContextFile and try to understand it.
2. If there are areas that require clarification on ContextFile, ask me before proceeding with task.
3. Once clarification has been reached, update ContextFile and ask me to review.
4. Once I am happy with changed, run tests and take note of what is passing. Make sure your work doesn't cause passing tests to fail unless the tests are invalid.
5.  proceed with task
6. At the end of task, run forge test.
7. There may be failing tests. However, I may have only asked you to fix a specific problem. If tests are failing covering features you weren't instructed to test then ignore those failures. If the tests covering the feature you were asked to fix are passing, consider tests to be in a state called "conditional passing". If all tests pass then the state is "unconditional passing". if tests are failing which are expected to pass, given the request, then the state is "failing".
8. If the tests are in the state "failing", fix the bugs in either the code or the tests (depending on which is incorrect) until they are in "conditional passing" state.
9. Once the task is complete and the tests are in "conditional passing" state, there will likely be changes to source files. If so, update ContextFile if necessary.


I will review all changes in source control. If I'm happy, I can commit. This enables me to preserve context for new chats so that I don't have to worry about long running chats exhausting a workflow.