[
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -164,7 +164,8 @@\n      * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n      */\n     constructor(address initialOwner) {\n-        if (initialOwner == address(0)) {\n+        /// IfStatementMutation(`initialOwner == address(0)` |==> `true`) of: `if (initialOwner == address(0)) {`\n+        if (true) {\n             revert OwnableInvalidOwner(address(0));\n         }\n         _transferOwnership(initialOwner);\n",
    "id": "1",
    "name": "mutants/1/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -164,7 +164,8 @@\n      * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n      */\n     constructor(address initialOwner) {\n-        if (initialOwner == address(0)) {\n+        /// IfStatementMutation(`initialOwner == address(0)` |==> `false`) of: `if (initialOwner == address(0)) {`\n+        if (false) {\n             revert OwnableInvalidOwner(address(0));\n         }\n         _transferOwnership(initialOwner);\n",
    "id": "2",
    "name": "mutants/2/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -167,7 +167,8 @@\n         if (initialOwner == address(0)) {\n             revert OwnableInvalidOwner(address(0));\n         }\n-        _transferOwnership(initialOwner);\n+        /// DeleteExpressionMutation(`_transferOwnership(initialOwner)` |==> `assert(true)`) of: `_transferOwnership(initialOwner);`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "3",
    "name": "mutants/3/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n      * @dev Throws if called by any account other than the owner.\n      */\n     modifier onlyOwner() {\n-        _checkOwner();\n+        /// DeleteExpressionMutation(`_checkOwner()` |==> `assert(true)`) of: `_checkOwner();`\n+        assert(true);\n         _;\n     }\n \n",
    "id": "4",
    "name": "mutants/4/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -189,7 +189,8 @@\n      * @dev Throws if the sender is not the owner.\n      */\n     function _checkOwner() internal view virtual {\n-        if (owner() != msg.sender) {\n+        /// IfStatementMutation(`owner() != msg.sender` |==> `true`) of: `if (owner() != msg.sender) {`\n+        if (true) {\n             revert OwnableUnauthorizedAccount(msg.sender);\n         }\n     }\n",
    "id": "5",
    "name": "mutants/5/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -189,7 +189,8 @@\n      * @dev Throws if the sender is not the owner.\n      */\n     function _checkOwner() internal view virtual {\n-        if (owner() != msg.sender) {\n+        /// IfStatementMutation(`owner() != msg.sender` |==> `false`) of: `if (owner() != msg.sender) {`\n+        if (false) {\n             revert OwnableUnauthorizedAccount(msg.sender);\n         }\n     }\n",
    "id": "6",
    "name": "mutants/6/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -202,7 +202,8 @@\n      * thereby disabling any functionality that is only available to the owner.\n      */\n     function renounceOwnership() public virtual onlyOwner {\n-        _transferOwnership(address(0));\n+        /// DeleteExpressionMutation(`_transferOwnership(address(0))` |==> `assert(true)`) of: `_transferOwnership(address(0));`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "7",
    "name": "mutants/7/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -210,7 +210,8 @@\n      * Can only be called by the current owner.\n      */\n     function transferOwnership(address newOwner) public virtual onlyOwner {\n-        if (newOwner == address(0)) {\n+        /// IfStatementMutation(`newOwner == address(0)` |==> `true`) of: `if (newOwner == address(0)) {`\n+        if (true) {\n             revert OwnableInvalidOwner(address(0));\n         }\n         _transferOwnership(newOwner);\n",
    "id": "8",
    "name": "mutants/8/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -210,7 +210,8 @@\n      * Can only be called by the current owner.\n      */\n     function transferOwnership(address newOwner) public virtual onlyOwner {\n-        if (newOwner == address(0)) {\n+        /// IfStatementMutation(`newOwner == address(0)` |==> `false`) of: `if (newOwner == address(0)) {`\n+        if (false) {\n             revert OwnableInvalidOwner(address(0));\n         }\n         _transferOwnership(newOwner);\n",
    "id": "9",
    "name": "mutants/9/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -213,7 +213,8 @@\n         if (newOwner == address(0)) {\n             revert OwnableInvalidOwner(address(0));\n         }\n-        _transferOwnership(newOwner);\n+        /// DeleteExpressionMutation(`_transferOwnership(newOwner)` |==> `assert(true)`) of: `_transferOwnership(newOwner);`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "10",
    "name": "mutants/10/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -222,7 +222,8 @@\n      */\n     function _transferOwnership(address newOwner) internal virtual {\n         address oldOwner = _owner;\n-        _owner = newOwner;\n+        /// DeleteExpressionMutation(`_owner = newOwner` |==> `assert(true)`) of: `_owner = newOwner;`\n+        assert(true);\n         emit OwnershipTransferred(oldOwner, newOwner);\n     }\n }\n",
    "id": "11",
    "name": "mutants/11/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -273,7 +273,8 @@\n     error ReentrancyGuardReentrantCall();\n \n     constructor() {\n-        _status = NOT_ENTERED;\n+        /// DeleteExpressionMutation(`_status = NOT_ENTERED` |==> `assert(true)`) of: `_status = NOT_ENTERED;`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "12",
    "name": "mutants/12/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -273,7 +273,8 @@\n     error ReentrancyGuardReentrantCall();\n \n     constructor() {\n-        _status = NOT_ENTERED;\n+        /// AssignmentMutation(`NOT_ENTERED` |==> `0`) of: `_status = NOT_ENTERED;`\n+        _status = 0;\n     }\n \n     /**\n",
    "id": "13",
    "name": "mutants/13/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -273,7 +273,8 @@\n     error ReentrancyGuardReentrantCall();\n \n     constructor() {\n-        _status = NOT_ENTERED;\n+        /// AssignmentMutation(`NOT_ENTERED` |==> `1`) of: `_status = NOT_ENTERED;`\n+        _status = 1;\n     }\n \n     /**\n",
    "id": "14",
    "name": "mutants/14/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -284,7 +284,8 @@\n      * `private` function that does the actual work.\n      */\n     modifier nonReentrant() {\n-        _nonReentrantBefore();\n+        /// DeleteExpressionMutation(`_nonReentrantBefore()` |==> `assert(true)`) of: `_nonReentrantBefore();`\n+        assert(true);\n         _;\n         _nonReentrantAfter();\n     }\n",
    "id": "15",
    "name": "mutants/15/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -286,7 +286,8 @@\n     modifier nonReentrant() {\n         _nonReentrantBefore();\n         _;\n-        _nonReentrantAfter();\n+        /// DeleteExpressionMutation(`_nonReentrantAfter()` |==> `assert(true)`) of: `_nonReentrantAfter();`\n+        assert(true);\n     }\n \n     function _nonReentrantBefore() private {\n",
    "id": "16",
    "name": "mutants/16/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -291,7 +291,8 @@\n \n     function _nonReentrantBefore() private {\n         // On the first call to nonReentrant, _status will be NOT_ENTERED\n-        if (_status == ENTERED) {\n+        /// IfStatementMutation(`_status == ENTERED` |==> `true`) of: `if (_status == ENTERED) {`\n+        if (true) {\n             revert ReentrancyGuardReentrantCall();\n         }\n \n",
    "id": "17",
    "name": "mutants/17/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -291,7 +291,8 @@\n \n     function _nonReentrantBefore() private {\n         // On the first call to nonReentrant, _status will be NOT_ENTERED\n-        if (_status == ENTERED) {\n+        /// IfStatementMutation(`_status == ENTERED` |==> `false`) of: `if (_status == ENTERED) {`\n+        if (false) {\n             revert ReentrancyGuardReentrantCall();\n         }\n \n",
    "id": "18",
    "name": "mutants/18/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n         }\n \n         // Any calls to nonReentrant after this point will fail\n-        _status = ENTERED;\n+        /// DeleteExpressionMutation(`_status = ENTERED` |==> `assert(true)`) of: `_status = ENTERED;`\n+        assert(true);\n     }\n \n     function _nonReentrantAfter() private {\n",
    "id": "19",
    "name": "mutants/19/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n         }\n \n         // Any calls to nonReentrant after this point will fail\n-        _status = ENTERED;\n+        /// AssignmentMutation(`ENTERED` |==> `0`) of: `_status = ENTERED;`\n+        _status = 0;\n     }\n \n     function _nonReentrantAfter() private {\n",
    "id": "20",
    "name": "mutants/20/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n         }\n \n         // Any calls to nonReentrant after this point will fail\n-        _status = ENTERED;\n+        /// AssignmentMutation(`ENTERED` |==> `1`) of: `_status = ENTERED;`\n+        _status = 1;\n     }\n \n     function _nonReentrantAfter() private {\n",
    "id": "21",
    "name": "mutants/21/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -302,7 +302,8 @@\n     function _nonReentrantAfter() private {\n         // By storing the original value once again, a refund is triggered (see\n         // https://eips.ethereum.org/EIPS/eip-2200)\n-        _status = NOT_ENTERED;\n+        /// DeleteExpressionMutation(`_status = NOT_ENTERED` |==> `assert(true)`) of: `_status = NOT_ENTERED;`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "22",
    "name": "mutants/22/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -302,7 +302,8 @@\n     function _nonReentrantAfter() private {\n         // By storing the original value once again, a refund is triggered (see\n         // https://eips.ethereum.org/EIPS/eip-2200)\n-        _status = NOT_ENTERED;\n+        /// AssignmentMutation(`NOT_ENTERED` |==> `0`) of: `_status = NOT_ENTERED;`\n+        _status = 0;\n     }\n \n     /**\n",
    "id": "23",
    "name": "mutants/23/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -302,7 +302,8 @@\n     function _nonReentrantAfter() private {\n         // By storing the original value once again, a refund is triggered (see\n         // https://eips.ethereum.org/EIPS/eip-2200)\n-        _status = NOT_ENTERED;\n+        /// AssignmentMutation(`NOT_ENTERED` |==> `1`) of: `_status = NOT_ENTERED;`\n+        _status = 1;\n     }\n \n     /**\n",
    "id": "24",
    "name": "mutants/24/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -338,7 +338,8 @@\n      * non-reverting calls are assumed to be successful.\n      */\n     function safeTransfer(IERC20 token, address to, uint256 value) internal {\n-        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n+        /// DeleteExpressionMutation(`_callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)))` |==> `assert(true)`) of: `_callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "25",
    "name": "mutants/25/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -346,7 +346,8 @@\n      * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n      */\n     function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n-        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n+        /// DeleteExpressionMutation(`_callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)))` |==> `assert(true)`) of: `_callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));`\n+        assert(true);\n     }\n \n     /**\n",
    "id": "26",
    "name": "mutants/26/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -372,7 +372,8 @@\n             returnValue := mload(0)\n         }\n \n-        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n+        /// IfStatementMutation(`returnSize == 0 ? address(token).code.length == 0 : returnValue != 1` |==> `true`) of: `if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {`\n+        if (true) {\n             revert SafeERC20FailedOperation(address(token));\n         }\n     }\n",
    "id": "27",
    "name": "mutants/27/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -372,7 +372,8 @@\n             returnValue := mload(0)\n         }\n \n-        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n+        /// IfStatementMutation(`returnSize == 0 ? address(token).code.length == 0 : returnValue != 1` |==> `false`) of: `if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {`\n+        if (false) {\n             revert SafeERC20FailedOperation(address(token));\n         }\n     }\n",
    "id": "28",
    "name": "mutants/28/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -555,7 +555,8 @@\n         flaxToken = IERC20(_flaxToken);\n         sFlaxToken = IERC20(_sFlaxToken);\n         inputToken = IERC20(_inputToken);\n-        yieldSource = _yieldSource;\n+        /// DeleteExpressionMutation(`yieldSource = _yieldSource` |==> `assert(true)`) of: `yieldSource = _yieldSource;`\n+        assert(true);\n         priceTilter = _priceTilter;\n         emergencyState = false;\n         rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)\n",
    "id": "29",
    "name": "mutants/29/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -557,7 +557,8 @@\n         inputToken = IERC20(_inputToken);\n         yieldSource = _yieldSource;\n         priceTilter = _priceTilter;\n-        emergencyState = false;\n+        /// DeleteExpressionMutation(`emergencyState = false` |==> `assert(true)`) of: `emergencyState = false;`\n+        assert(true);\n         rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)\n     }\n \n",
    "id": "30",
    "name": "mutants/30/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -557,7 +557,8 @@\n         inputToken = IERC20(_inputToken);\n         yieldSource = _yieldSource;\n         priceTilter = _priceTilter;\n-        emergencyState = false;\n+        /// AssignmentMutation(`false` |==> `true`) of: `emergencyState = false;`\n+        emergencyState = true;\n         rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)\n     }\n \n",
    "id": "31",
    "name": "mutants/31/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -558,7 +558,8 @@\n         yieldSource = _yieldSource;\n         priceTilter = _priceTilter;\n         emergencyState = false;\n-        rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)\n+        /// DeleteExpressionMutation(`rebaseMultiplier = 1e18` |==> `assert(true)`) of: `rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)`\n+        assert(true); // Initialize to 1.0 (normal operation)\n     }\n \n     /**\n",
    "id": "32",
    "name": "mutants/32/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -558,7 +558,8 @@\n         yieldSource = _yieldSource;\n         priceTilter = _priceTilter;\n         emergencyState = false;\n-        rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)\n+        /// AssignmentMutation(`1e18` |==> `0`) of: `rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)`\n+        rebaseMultiplier = 0; // Initialize to 1.0 (normal operation)\n     }\n \n     /**\n",
    "id": "33",
    "name": "mutants/33/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -558,7 +558,8 @@\n         yieldSource = _yieldSource;\n         priceTilter = _priceTilter;\n         emergencyState = false;\n-        rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)\n+        /// AssignmentMutation(`1e18` |==> `1`) of: `rebaseMultiplier = 1e18; // Initialize to 1.0 (normal operation)`\n+        rebaseMultiplier = 1; // Initialize to 1.0 (normal operation)\n     }\n \n     /**\n",
    "id": "34",
    "name": "mutants/34/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -565,7 +565,8 @@\n      * @notice Modifier to prevent function execution during emergency state\n      */\n     modifier notInEmergencyState() {\n-        require(!emergencyState, \"Contract is in emergency state\");\n+        /// DeleteExpressionMutation(`require(!emergencyState, \"Contract is in emergency state\")` |==> `assert(true)`) of: `require(!emergencyState, \"Contract is in emergency state\");`\n+        assert(true);\n         _;\n     }\n     \n",
    "id": "35",
    "name": "mutants/35/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -565,7 +565,8 @@\n      * @notice Modifier to prevent function execution during emergency state\n      */\n     modifier notInEmergencyState() {\n-        require(!emergencyState, \"Contract is in emergency state\");\n+        /// RequireMutation(`!emergencyState` |==> `true`) of: `require(!emergencyState, \"Contract is in emergency state\");`\n+        require(true, \"Contract is in emergency state\");\n         _;\n     }\n     \n",
    "id": "36",
    "name": "mutants/36/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -565,7 +565,8 @@\n      * @notice Modifier to prevent function execution during emergency state\n      */\n     modifier notInEmergencyState() {\n-        require(!emergencyState, \"Contract is in emergency state\");\n+        /// RequireMutation(`!emergencyState` |==> `false`) of: `require(!emergencyState, \"Contract is in emergency state\");`\n+        require(false, \"Contract is in emergency state\");\n         _;\n     }\n     \n",
    "id": "37",
    "name": "mutants/37/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -573,7 +573,8 @@\n      * @notice Modifier to prevent operations when vault is permanently disabled (rebase = 0)\n      */\n     modifier notPermanentlyDisabled() {\n-        require(rebaseMultiplier > 0, \"Vault permanently disabled\");\n+        /// DeleteExpressionMutation(`require(rebaseMultiplier > 0, \"Vault permanently disabled\")` |==> `assert(true)`) of: `require(rebaseMultiplier > 0, \"Vault permanently disabled\");`\n+        assert(true);\n         _;\n     }\n     \n",
    "id": "38",
    "name": "mutants/38/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -573,7 +573,8 @@\n      * @notice Modifier to prevent operations when vault is permanently disabled (rebase = 0)\n      */\n     modifier notPermanentlyDisabled() {\n-        require(rebaseMultiplier > 0, \"Vault permanently disabled\");\n+        /// RequireMutation(`rebaseMultiplier > 0` |==> `true`) of: `require(rebaseMultiplier > 0, \"Vault permanently disabled\");`\n+        require(true, \"Vault permanently disabled\");\n         _;\n     }\n     \n",
    "id": "39",
    "name": "mutants/39/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -573,7 +573,8 @@\n      * @notice Modifier to prevent operations when vault is permanently disabled (rebase = 0)\n      */\n     modifier notPermanentlyDisabled() {\n-        require(rebaseMultiplier > 0, \"Vault permanently disabled\");\n+        /// RequireMutation(`rebaseMultiplier > 0` |==> `false`) of: `require(rebaseMultiplier > 0, \"Vault permanently disabled\");`\n+        require(false, \"Vault permanently disabled\");\n         _;\n     }\n     \n",
    "id": "40",
    "name": "mutants/40/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -573,7 +573,8 @@\n      * @notice Modifier to prevent operations when vault is permanently disabled (rebase = 0)\n      */\n     modifier notPermanentlyDisabled() {\n-        require(rebaseMultiplier > 0, \"Vault permanently disabled\");\n+        /// SwapArgumentsOperatorMutation(`rebaseMultiplier > 0` |==> `0 > rebaseMultiplier`) of: `require(rebaseMultiplier > 0, \"Vault permanently disabled\");`\n+        require(0 > rebaseMultiplier, \"Vault permanently disabled\");\n         _;\n     }\n     \n",
    "id": "41",
    "name": "mutants/41/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `+`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user] * rebaseMultiplier)+1e18;\n     }\n     \n     /**\n",
    "id": "42",
    "name": "mutants/42/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `-`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user] * rebaseMultiplier)-1e18;\n     }\n     \n     /**\n",
    "id": "43",
    "name": "mutants/43/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `*`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user] * rebaseMultiplier)*1e18;\n     }\n     \n     /**\n",
    "id": "44",
    "name": "mutants/44/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `%`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user] * rebaseMultiplier)%1e18;\n     }\n     \n     /**\n",
    "id": "45",
    "name": "mutants/45/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `**`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user] * rebaseMultiplier)**1e18;\n     }\n     \n     /**\n",
    "id": "46",
    "name": "mutants/46/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// SwapArgumentsOperatorMutation(`(originalDeposits[user] * rebaseMultiplier) / 1e18` |==> `1e18 / (originalDeposits[user] * rebaseMultiplier)`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return 1e18 / (originalDeposits[user] * rebaseMultiplier);\n     }\n     \n     /**\n",
    "id": "47",
    "name": "mutants/47/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `+`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user]+rebaseMultiplier) / 1e18;\n     }\n     \n     /**\n",
    "id": "48",
    "name": "mutants/48/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `-`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user]-rebaseMultiplier) / 1e18;\n     }\n     \n     /**\n",
    "id": "49",
    "name": "mutants/49/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `/`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user]/rebaseMultiplier) / 1e18;\n     }\n     \n     /**\n",
    "id": "50",
    "name": "mutants/50/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `%`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user]%rebaseMultiplier) / 1e18;\n     }\n     \n     /**\n",
    "id": "51",
    "name": "mutants/51/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -583,7 +583,8 @@\n      * @return The effective deposit amount\n      */\n     function getEffectiveDeposit(address user) public view returns (uint256) {\n-        return (originalDeposits[user] * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `**`) of: `return (originalDeposits[user] * rebaseMultiplier) / 1e18;`\n+        return (originalDeposits[user]**rebaseMultiplier) / 1e18;\n     }\n     \n     /**\n",
    "id": "52",
    "name": "mutants/52/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `+`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits * rebaseMultiplier)+1e18;\n     }\n \n     /**\n",
    "id": "53",
    "name": "mutants/53/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `-`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits * rebaseMultiplier)-1e18;\n     }\n \n     /**\n",
    "id": "54",
    "name": "mutants/54/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `*`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits * rebaseMultiplier)*1e18;\n     }\n \n     /**\n",
    "id": "55",
    "name": "mutants/55/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `%`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits * rebaseMultiplier)%1e18;\n     }\n \n     /**\n",
    "id": "56",
    "name": "mutants/56/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`/` |==> `**`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits * rebaseMultiplier)**1e18;\n     }\n \n     /**\n",
    "id": "57",
    "name": "mutants/57/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// SwapArgumentsOperatorMutation(`(totalDeposits * rebaseMultiplier) / 1e18` |==> `1e18 / (totalDeposits * rebaseMultiplier)`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return 1e18 / (totalDeposits * rebaseMultiplier);\n     }\n \n     /**\n",
    "id": "58",
    "name": "mutants/58/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `+`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits+rebaseMultiplier) / 1e18;\n     }\n \n     /**\n",
    "id": "59",
    "name": "mutants/59/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `-`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits-rebaseMultiplier) / 1e18;\n     }\n \n     /**\n",
    "id": "60",
    "name": "mutants/60/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `/`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits/rebaseMultiplier) / 1e18;\n     }\n \n     /**\n",
    "id": "61",
    "name": "mutants/61/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `%`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits%rebaseMultiplier) / 1e18;\n     }\n \n     /**\n",
    "id": "62",
    "name": "mutants/62/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -591,7 +591,8 @@\n      * @return The effective total deposits\n      */\n     function getEffectiveTotalDeposits() public view returns (uint256) {\n-        return (totalDeposits * rebaseMultiplier) / 1e18;\n+        /// BinaryOpMutation(`*` |==> `**`) of: `return (totalDeposits * rebaseMultiplier) / 1e18;`\n+        return (totalDeposits**rebaseMultiplier) / 1e18;\n     }\n \n     /**\n",
    "id": "63",
    "name": "mutants/63/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -600,7 +600,8 @@\n      * @dev Tokens are immediately forwarded to the yield source\n      */\n     function deposit(uint256 amount) external nonReentrant notInEmergencyState notPermanentlyDisabled {\n-        require(amount > 0, \"Deposit amount must be greater than 0\");\n+        /// DeleteExpressionMutation(`require(amount > 0, \"Deposit amount must be greater than 0\")` |==> `assert(true)`) of: `require(amount > 0, \"Deposit amount must be greater than 0\");`\n+        assert(true);\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n",
    "id": "64",
    "name": "mutants/64/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -600,7 +600,8 @@\n      * @dev Tokens are immediately forwarded to the yield source\n      */\n     function deposit(uint256 amount) external nonReentrant notInEmergencyState notPermanentlyDisabled {\n-        require(amount > 0, \"Deposit amount must be greater than 0\");\n+        /// RequireMutation(`amount > 0` |==> `true`) of: `require(amount > 0, \"Deposit amount must be greater than 0\");`\n+        require(true, \"Deposit amount must be greater than 0\");\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n",
    "id": "65",
    "name": "mutants/65/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -600,7 +600,8 @@\n      * @dev Tokens are immediately forwarded to the yield source\n      */\n     function deposit(uint256 amount) external nonReentrant notInEmergencyState notPermanentlyDisabled {\n-        require(amount > 0, \"Deposit amount must be greater than 0\");\n+        /// RequireMutation(`amount > 0` |==> `false`) of: `require(amount > 0, \"Deposit amount must be greater than 0\");`\n+        require(false, \"Deposit amount must be greater than 0\");\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n",
    "id": "66",
    "name": "mutants/66/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -600,7 +600,8 @@\n      * @dev Tokens are immediately forwarded to the yield source\n      */\n     function deposit(uint256 amount) external nonReentrant notInEmergencyState notPermanentlyDisabled {\n-        require(amount > 0, \"Deposit amount must be greater than 0\");\n+        /// SwapArgumentsOperatorMutation(`amount > 0` |==> `0 > amount`) of: `require(amount > 0, \"Deposit amount must be greater than 0\");`\n+        require(0 > amount, \"Deposit amount must be greater than 0\");\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n",
    "id": "67",
    "name": "mutants/67/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -601,7 +601,8 @@\n      */\n     function deposit(uint256 amount) external nonReentrant notInEmergencyState notPermanentlyDisabled {\n         require(amount > 0, \"Deposit amount must be greater than 0\");\n-        inputToken.safeTransferFrom(msg.sender, address(this), amount);\n+        /// DeleteExpressionMutation(`inputToken.safeTransferFrom(msg.sender, address(this), amount)` |==> `assert(true)`) of: `inputToken.safeTransferFrom(msg.sender, address(this), amount);`\n+        assert(true);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n         originalDeposits[msg.sender] += amount;\n",
    "id": "68",
    "name": "mutants/68/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -602,7 +602,8 @@\n     function deposit(uint256 amount) external nonReentrant notInEmergencyState notPermanentlyDisabled {\n         require(amount > 0, \"Deposit amount must be greater than 0\");\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n-        inputToken.approve(yieldSource, amount);\n+        /// DeleteExpressionMutation(`inputToken.approve(yieldSource, amount)` |==> `assert(true)`) of: `inputToken.approve(yieldSource, amount);`\n+        assert(true);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n         originalDeposits[msg.sender] += amount;\n         totalDeposits += amount;\n",
    "id": "69",
    "name": "mutants/69/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -604,7 +604,8 @@\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n-        originalDeposits[msg.sender] += amount;\n+        /// DeleteExpressionMutation(`originalDeposits[msg.sender] += amount` |==> `assert(true)`) of: `originalDeposits[msg.sender] += amount;`\n+        assert(true);\n         totalDeposits += amount;\n         emit Deposited(msg.sender, amount);\n     }\n",
    "id": "70",
    "name": "mutants/70/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -604,7 +604,8 @@\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n-        originalDeposits[msg.sender] += amount;\n+        /// AssignmentMutation(`amount` |==> `0`) of: `originalDeposits[msg.sender] += amount;`\n+        originalDeposits[msg.sender] += 0;\n         totalDeposits += amount;\n         emit Deposited(msg.sender, amount);\n     }\n",
    "id": "71",
    "name": "mutants/71/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -604,7 +604,8 @@\n         inputToken.safeTransferFrom(msg.sender, address(this), amount);\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n-        originalDeposits[msg.sender] += amount;\n+        /// AssignmentMutation(`amount` |==> `1`) of: `originalDeposits[msg.sender] += amount;`\n+        originalDeposits[msg.sender] += 1;\n         totalDeposits += amount;\n         emit Deposited(msg.sender, amount);\n     }\n",
    "id": "72",
    "name": "mutants/72/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -605,7 +605,8 @@\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n         originalDeposits[msg.sender] += amount;\n-        totalDeposits += amount;\n+        /// DeleteExpressionMutation(`totalDeposits += amount` |==> `assert(true)`) of: `totalDeposits += amount;`\n+        assert(true);\n         emit Deposited(msg.sender, amount);\n     }\n \n",
    "id": "73",
    "name": "mutants/73/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -605,7 +605,8 @@\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n         originalDeposits[msg.sender] += amount;\n-        totalDeposits += amount;\n+        /// AssignmentMutation(`amount` |==> `0`) of: `totalDeposits += amount;`\n+        totalDeposits += 0;\n         emit Deposited(msg.sender, amount);\n     }\n \n",
    "id": "74",
    "name": "mutants/74/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -605,7 +605,8 @@\n         inputToken.approve(yieldSource, amount);\n         uint256 received = IYieldsSource(yieldSource).deposit(amount);\n         originalDeposits[msg.sender] += amount;\n-        totalDeposits += amount;\n+        /// AssignmentMutation(`amount` |==> `1`) of: `totalDeposits += amount;`\n+        totalDeposits += 1;\n         emit Deposited(msg.sender, amount);\n     }\n \n",
    "id": "75",
    "name": "mutants/75/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -617,7 +617,8 @@\n      * @dev Uses surplus to cover shortfalls from impermanent loss or fees\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n-        require(canWithdraw(), \"Withdrawal not allowed\");\n+        /// DeleteExpressionMutation(`require(canWithdraw(), \"Withdrawal not allowed\")` |==> `assert(true)`) of: `require(canWithdraw(), \"Withdrawal not allowed\");`\n+        assert(true);\n         require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n \n         // Calculate the raw amount to withdraw from yield source\n",
    "id": "76",
    "name": "mutants/76/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -617,7 +617,8 @@\n      * @dev Uses surplus to cover shortfalls from impermanent loss or fees\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n-        require(canWithdraw(), \"Withdrawal not allowed\");\n+        /// RequireMutation(`canWithdraw()` |==> `true`) of: `require(canWithdraw(), \"Withdrawal not allowed\");`\n+        require(true, \"Withdrawal not allowed\");\n         require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n \n         // Calculate the raw amount to withdraw from yield source\n",
    "id": "77",
    "name": "mutants/77/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -617,7 +617,8 @@\n      * @dev Uses surplus to cover shortfalls from impermanent loss or fees\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n-        require(canWithdraw(), \"Withdrawal not allowed\");\n+        /// RequireMutation(`canWithdraw()` |==> `false`) of: `require(canWithdraw(), \"Withdrawal not allowed\");`\n+        require(false, \"Withdrawal not allowed\");\n         require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n \n         // Calculate the raw amount to withdraw from yield source\n",
    "id": "78",
    "name": "mutants/78/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -618,7 +618,8 @@\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n         require(canWithdraw(), \"Withdrawal not allowed\");\n-        require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n+        /// DeleteExpressionMutation(`require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\")` |==> `assert(true)`) of: `require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");`\n+        assert(true);\n \n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n",
    "id": "79",
    "name": "mutants/79/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -618,7 +618,8 @@\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n         require(canWithdraw(), \"Withdrawal not allowed\");\n-        require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n+        /// RequireMutation(`getEffectiveDeposit(msg.sender) >= amount` |==> `true`) of: `require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");`\n+        require(true, \"Insufficient effective deposit\");\n \n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n",
    "id": "80",
    "name": "mutants/80/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -618,7 +618,8 @@\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n         require(canWithdraw(), \"Withdrawal not allowed\");\n-        require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n+        /// RequireMutation(`getEffectiveDeposit(msg.sender) >= amount` |==> `false`) of: `require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");`\n+        require(false, \"Insufficient effective deposit\");\n \n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n",
    "id": "81",
    "name": "mutants/81/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -618,7 +618,8 @@\n      */\n     function withdraw(uint256 amount, bool protectLoss, uint256 sFlaxAmount) external nonReentrant notPermanentlyDisabled {\n         require(canWithdraw(), \"Withdrawal not allowed\");\n-        require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");\n+        /// SwapArgumentsOperatorMutation(`getEffectiveDeposit(msg.sender) >= amount` |==> `amount >= getEffectiveDeposit(msg.sender)`) of: `require(getEffectiveDeposit(msg.sender) >= amount, \"Insufficient effective deposit\");`\n+        require(amount >= getEffectiveDeposit(msg.sender), \"Insufficient effective deposit\");\n \n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n",
    "id": "82",
    "name": "mutants/82/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`/` |==> `+`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount * 1e18)+rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "83",
    "name": "mutants/83/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`/` |==> `-`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount * 1e18)-rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "84",
    "name": "mutants/84/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`/` |==> `*`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount * 1e18)*rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "85",
    "name": "mutants/85/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`/` |==> `%`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount * 1e18)%rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "86",
    "name": "mutants/86/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`/` |==> `**`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount * 1e18)**rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "87",
    "name": "mutants/87/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// SwapArgumentsOperatorMutation(`(amount * 1e18) / rebaseMultiplier` |==> `rebaseMultiplier / (amount * 1e18)`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = rebaseMultiplier / (amount * 1e18);\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "88",
    "name": "mutants/88/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`*` |==> `+`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount+1e18) / rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "89",
    "name": "mutants/89/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`*` |==> `-`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount-1e18) / rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "90",
    "name": "mutants/90/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`*` |==> `/`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount/1e18) / rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "91",
    "name": "mutants/91/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`*` |==> `%`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount%1e18) / rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "92",
    "name": "mutants/92/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -623,7 +623,8 @@\n         // Calculate the raw amount to withdraw from yield source\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n-        uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n+        /// BinaryOpMutation(`*` |==> `**`) of: `uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;`\n+        uint256 rawAmountToWithdraw = (amount**1e18) / rebaseMultiplier;\n         require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n",
    "id": "93",
    "name": "mutants/93/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -624,7 +624,8 @@\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n         uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n-        require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n+        /// DeleteExpressionMutation(`require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\")` |==> `assert(true)`) of: `require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");`\n+        assert(true);\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n",
    "id": "94",
    "name": "mutants/94/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -624,7 +624,8 @@\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n         uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n-        require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n+        /// RequireMutation(`originalDeposits[msg.sender] >= rawAmountToWithdraw` |==> `true`) of: `require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");`\n+        require(true, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n",
    "id": "95",
    "name": "mutants/95/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -624,7 +624,8 @@\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n         uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n-        require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n+        /// RequireMutation(`originalDeposits[msg.sender] >= rawAmountToWithdraw` |==> `false`) of: `require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");`\n+        require(false, \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n",
    "id": "96",
    "name": "mutants/96/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -624,7 +624,8 @@\n         // If rebase multiplier is 1e18, this equals amount\n         // If rebase multiplier is different, we need to adjust\n         uint256 rawAmountToWithdraw = (amount * 1e18) / rebaseMultiplier;\n-        require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");\n+        /// SwapArgumentsOperatorMutation(`originalDeposits[msg.sender] >= rawAmountToWithdraw` |==> `rawAmountToWithdraw >= originalDeposits[msg.sender]`) of: `require(originalDeposits[msg.sender] >= rawAmountToWithdraw, \"Insufficient raw deposit\");`\n+        require(rawAmountToWithdraw >= originalDeposits[msg.sender], \"Insufficient raw deposit\");\n \n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n",
    "id": "97",
    "name": "mutants/97/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// DeleteExpressionMutation(`require(balanceAfter >= balanceBefore + received, \"Balance mismatch\")` |==> `assert(true)`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        assert(true);\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "98",
    "name": "mutants/98/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// RequireMutation(`balanceAfter >= balanceBefore + received` |==> `true`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(true, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "99",
    "name": "mutants/99/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// RequireMutation(`balanceAfter >= balanceBefore + received` |==> `false`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(false, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "100",
    "name": "mutants/100/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// SwapArgumentsOperatorMutation(`balanceAfter >= balanceBefore + received` |==> `balanceBefore + received >= balanceAfter`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(balanceBefore + received >= balanceAfter, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "101",
    "name": "mutants/101/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// BinaryOpMutation(`+` |==> `-`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(balanceAfter >= balanceBefore-received, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "102",
    "name": "mutants/102/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// BinaryOpMutation(`+` |==> `*`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(balanceAfter >= balanceBefore*received, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "103",
    "name": "mutants/103/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// BinaryOpMutation(`+` |==> `/`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(balanceAfter >= balanceBefore/received, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "104",
    "name": "mutants/104/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// BinaryOpMutation(`+` |==> `%`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(balanceAfter >= balanceBefore%received, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "105",
    "name": "mutants/105/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -629,7 +629,8 @@\n         uint256 balanceBefore = inputToken.balanceOf(address(this));\n         (uint256 received, uint256 flaxValue) = IYieldsSource(yieldSource).withdraw(rawAmountToWithdraw);\n         uint256 balanceAfter = inputToken.balanceOf(address(this));\n-        require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");\n+        /// BinaryOpMutation(`+` |==> `**`) of: `require(balanceAfter >= balanceBefore + received, \"Balance mismatch\");`\n+        require(balanceAfter >= balanceBefore**received, \"Balance mismatch\");\n \n         uint256 totalFlax = flaxValue;\n \n",
    "id": "106",
    "name": "mutants/106/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -633,7 +633,8 @@\n \n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// IfStatementMutation(`sFlaxAmount > 0 && flaxPerSFlax > 0` |==> `true`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (true) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "107",
    "name": "mutants/107/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -633,7 +633,8 @@\n \n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// IfStatementMutation(`sFlaxAmount > 0 && flaxPerSFlax > 0` |==> `false`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (false) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "108",
    "name": "mutants/108/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -633,7 +633,8 @@\n \n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// SwapArgumentsOperatorMutation(`sFlaxAmount > 0` |==> `0 > sFlaxAmount`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (0 > sFlaxAmount && flaxPerSFlax > 0) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "109",
    "name": "mutants/109/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -633,7 +633,8 @@\n \n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// SwapArgumentsOperatorMutation(`flaxPerSFlax > 0` |==> `0 > flaxPerSFlax`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (sFlaxAmount > 0 && 0 > flaxPerSFlax) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "110",
    "name": "mutants/110/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `+`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)+1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "111",
    "name": "mutants/111/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `-`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)-1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "112",
    "name": "mutants/112/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `*`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)*1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "113",
    "name": "mutants/113/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `%`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)%1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "114",
    "name": "mutants/114/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `**`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)**1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "115",
    "name": "mutants/115/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// SwapArgumentsOperatorMutation(`(sFlaxAmount * flaxPerSFlax) / 1e18` |==> `1e18 / (sFlaxAmount * flaxPerSFlax)`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = 1e18 / (sFlaxAmount * flaxPerSFlax);\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "116",
    "name": "mutants/116/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `+`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount+flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "117",
    "name": "mutants/117/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `-`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount-flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "118",
    "name": "mutants/118/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `/`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount/flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "119",
    "name": "mutants/119/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `%`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount%flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "120",
    "name": "mutants/120/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -634,7 +634,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `**`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount**flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "121",
    "name": "mutants/121/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -635,7 +635,8 @@\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n-            sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n+            /// DeleteExpressionMutation(`sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount)` |==> `assert(true)`) of: `sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);`\n+            assert(true);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n",
    "id": "122",
    "name": "mutants/122/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -636,7 +636,8 @@\n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n-            IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n+            /// DeleteExpressionMutation(`IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount)` |==> `assert(true)`) of: `IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);`\n+            assert(true);\n             totalFlax += flaxBoost;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n",
    "id": "123",
    "name": "mutants/123/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -637,7 +637,8 @@\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n-            totalFlax += flaxBoost;\n+            /// DeleteExpressionMutation(`totalFlax += flaxBoost` |==> `assert(true)`) of: `totalFlax += flaxBoost;`\n+            assert(true);\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n",
    "id": "124",
    "name": "mutants/124/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -637,7 +637,8 @@\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n-            totalFlax += flaxBoost;\n+            /// AssignmentMutation(`flaxBoost` |==> `0`) of: `totalFlax += flaxBoost;`\n+            totalFlax += 0;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n",
    "id": "125",
    "name": "mutants/125/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -637,7 +637,8 @@\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n-            totalFlax += flaxBoost;\n+            /// AssignmentMutation(`flaxBoost` |==> `1`) of: `totalFlax += flaxBoost;`\n+            totalFlax += 1;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n",
    "id": "126",
    "name": "mutants/126/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -641,7 +641,8 @@\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n-        if (totalFlax > 0) {\n+        /// IfStatementMutation(`totalFlax > 0` |==> `true`) of: `if (totalFlax > 0) {`\n+        if (true) {\n             flaxToken.safeTransfer(msg.sender, totalFlax);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n",
    "id": "127",
    "name": "mutants/127/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -641,7 +641,8 @@\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n-        if (totalFlax > 0) {\n+        /// IfStatementMutation(`totalFlax > 0` |==> `false`) of: `if (totalFlax > 0) {`\n+        if (false) {\n             flaxToken.safeTransfer(msg.sender, totalFlax);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n",
    "id": "128",
    "name": "mutants/128/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -641,7 +641,8 @@\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n-        if (totalFlax > 0) {\n+        /// SwapArgumentsOperatorMutation(`totalFlax > 0` |==> `0 > totalFlax`) of: `if (totalFlax > 0) {`\n+        if (0 > totalFlax) {\n             flaxToken.safeTransfer(msg.sender, totalFlax);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n",
    "id": "129",
    "name": "mutants/129/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -642,7 +642,8 @@\n         }\n \n         if (totalFlax > 0) {\n-            flaxToken.safeTransfer(msg.sender, totalFlax);\n+            /// DeleteExpressionMutation(`flaxToken.safeTransfer(msg.sender, totalFlax)` |==> `assert(true)`) of: `flaxToken.safeTransfer(msg.sender, totalFlax);`\n+            assert(true);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n \n",
    "id": "130",
    "name": "mutants/130/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -647,7 +647,8 @@\n         }\n \n         // Update raw deposits\n-        originalDeposits[msg.sender] -= rawAmountToWithdraw;\n+        /// DeleteExpressionMutation(`originalDeposits[msg.sender] -= rawAmountToWithdraw` |==> `assert(true)`) of: `originalDeposits[msg.sender] -= rawAmountToWithdraw;`\n+        assert(true);\n         totalDeposits -= rawAmountToWithdraw;\n \n         uint256 actualWithdrawn;\n",
    "id": "131",
    "name": "mutants/131/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -647,7 +647,8 @@\n         }\n \n         // Update raw deposits\n-        originalDeposits[msg.sender] -= rawAmountToWithdraw;\n+        /// AssignmentMutation(`rawAmountToWithdraw` |==> `0`) of: `originalDeposits[msg.sender] -= rawAmountToWithdraw;`\n+        originalDeposits[msg.sender] -= 0;\n         totalDeposits -= rawAmountToWithdraw;\n \n         uint256 actualWithdrawn;\n",
    "id": "132",
    "name": "mutants/132/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -647,7 +647,8 @@\n         }\n \n         // Update raw deposits\n-        originalDeposits[msg.sender] -= rawAmountToWithdraw;\n+        /// AssignmentMutation(`rawAmountToWithdraw` |==> `1`) of: `originalDeposits[msg.sender] -= rawAmountToWithdraw;`\n+        originalDeposits[msg.sender] -= 1;\n         totalDeposits -= rawAmountToWithdraw;\n \n         uint256 actualWithdrawn;\n",
    "id": "133",
    "name": "mutants/133/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -648,7 +648,8 @@\n \n         // Update raw deposits\n         originalDeposits[msg.sender] -= rawAmountToWithdraw;\n-        totalDeposits -= rawAmountToWithdraw;\n+        /// DeleteExpressionMutation(`totalDeposits -= rawAmountToWithdraw` |==> `assert(true)`) of: `totalDeposits -= rawAmountToWithdraw;`\n+        assert(true);\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n",
    "id": "134",
    "name": "mutants/134/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -648,7 +648,8 @@\n \n         // Update raw deposits\n         originalDeposits[msg.sender] -= rawAmountToWithdraw;\n-        totalDeposits -= rawAmountToWithdraw;\n+        /// AssignmentMutation(`rawAmountToWithdraw` |==> `0`) of: `totalDeposits -= rawAmountToWithdraw;`\n+        totalDeposits -= 0;\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n",
    "id": "135",
    "name": "mutants/135/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -648,7 +648,8 @@\n \n         // Update raw deposits\n         originalDeposits[msg.sender] -= rawAmountToWithdraw;\n-        totalDeposits -= rawAmountToWithdraw;\n+        /// AssignmentMutation(`rawAmountToWithdraw` |==> `1`) of: `totalDeposits -= rawAmountToWithdraw;`\n+        totalDeposits -= 1;\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n",
    "id": "136",
    "name": "mutants/136/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -651,7 +651,8 @@\n         totalDeposits -= rawAmountToWithdraw;\n \n         uint256 actualWithdrawn;\n-        if (received > amount) {\n+        /// IfStatementMutation(`received > amount` |==> `true`) of: `if (received > amount) {`\n+        if (true) {\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n",
    "id": "137",
    "name": "mutants/137/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -651,7 +651,8 @@\n         totalDeposits -= rawAmountToWithdraw;\n \n         uint256 actualWithdrawn;\n-        if (received > amount) {\n+        /// IfStatementMutation(`received > amount` |==> `false`) of: `if (received > amount) {`\n+        if (false) {\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n",
    "id": "138",
    "name": "mutants/138/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -651,7 +651,8 @@\n         totalDeposits -= rawAmountToWithdraw;\n \n         uint256 actualWithdrawn;\n-        if (received > amount) {\n+        /// SwapArgumentsOperatorMutation(`received > amount` |==> `amount > received`) of: `if (received > amount) {`\n+        if (amount > received) {\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n",
    "id": "139",
    "name": "mutants/139/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -655,7 +655,8 @@\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n-        } else if (received < amount) {\n+        /// IfStatementMutation(`received < amount` |==> `true`) of: `} else if (received < amount) {`\n+        } else if (true) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n",
    "id": "140",
    "name": "mutants/140/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -655,7 +655,8 @@\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n-        } else if (received < amount) {\n+        /// IfStatementMutation(`received < amount` |==> `false`) of: `} else if (received < amount) {`\n+        } else if (false) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n",
    "id": "141",
    "name": "mutants/141/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -655,7 +655,8 @@\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n-        } else if (received < amount) {\n+        /// SwapArgumentsOperatorMutation(`received < amount` |==> `amount < received`) of: `} else if (received < amount) {`\n+        } else if (amount < received) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n",
    "id": "142",
    "name": "mutants/142/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -668,7 +668,8 @@\n                 actualWithdrawn = received;\n             }\n         } else {\n-            inputToken.safeTransfer(msg.sender, amount);\n+            /// DeleteExpressionMutation(`inputToken.safeTransfer(msg.sender, amount)` |==> `assert(true)`) of: `inputToken.safeTransfer(msg.sender, amount);`\n+            assert(true);\n             actualWithdrawn = amount;\n         }\n \n",
    "id": "143",
    "name": "mutants/143/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -669,7 +669,8 @@\n             }\n         } else {\n             inputToken.safeTransfer(msg.sender, amount);\n-            actualWithdrawn = amount;\n+            /// DeleteExpressionMutation(`actualWithdrawn = amount` |==> `assert(true)`) of: `actualWithdrawn = amount;`\n+            assert(true);\n         }\n \n         emit Withdrawn(msg.sender, actualWithdrawn);\n",
    "id": "144",
    "name": "mutants/144/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -669,7 +669,8 @@\n             }\n         } else {\n             inputToken.safeTransfer(msg.sender, amount);\n-            actualWithdrawn = amount;\n+            /// AssignmentMutation(`amount` |==> `0`) of: `actualWithdrawn = amount;`\n+            actualWithdrawn = 0;\n         }\n \n         emit Withdrawn(msg.sender, actualWithdrawn);\n",
    "id": "145",
    "name": "mutants/145/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -669,7 +669,8 @@\n             }\n         } else {\n             inputToken.safeTransfer(msg.sender, amount);\n-            actualWithdrawn = amount;\n+            /// AssignmentMutation(`amount` |==> `1`) of: `actualWithdrawn = amount;`\n+            actualWithdrawn = 1;\n         }\n \n         emit Withdrawn(msg.sender, actualWithdrawn);\n",
    "id": "146",
    "name": "mutants/146/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -656,7 +656,8 @@\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n-            uint256 shortfall = amount - received;\n+            /// BinaryOpMutation(`-` |==> `+`) of: `uint256 shortfall = amount - received;`\n+            uint256 shortfall = amount+received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "147",
    "name": "mutants/147/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -656,7 +656,8 @@\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n-            uint256 shortfall = amount - received;\n+            /// BinaryOpMutation(`-` |==> `*`) of: `uint256 shortfall = amount - received;`\n+            uint256 shortfall = amount*received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "148",
    "name": "mutants/148/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -656,7 +656,8 @@\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n-            uint256 shortfall = amount - received;\n+            /// BinaryOpMutation(`-` |==> `/`) of: `uint256 shortfall = amount - received;`\n+            uint256 shortfall = amount/received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "149",
    "name": "mutants/149/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -656,7 +656,8 @@\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n-            uint256 shortfall = amount - received;\n+            /// BinaryOpMutation(`-` |==> `%`) of: `uint256 shortfall = amount - received;`\n+            uint256 shortfall = amount%received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "150",
    "name": "mutants/150/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -656,7 +656,8 @@\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n-            uint256 shortfall = amount - received;\n+            /// BinaryOpMutation(`-` |==> `**`) of: `uint256 shortfall = amount - received;`\n+            uint256 shortfall = amount**received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "151",
    "name": "mutants/151/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -656,7 +656,8 @@\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n-            uint256 shortfall = amount - received;\n+            /// SwapArgumentsOperatorMutation(`amount - received` |==> `received - amount`) of: `uint256 shortfall = amount - received;`\n+            uint256 shortfall = received - amount;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "152",
    "name": "mutants/152/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -657,7 +657,8 @@\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n-            if (surplusInputToken >= shortfall) {\n+            /// IfStatementMutation(`surplusInputToken >= shortfall` |==> `true`) of: `if (surplusInputToken >= shortfall) {`\n+            if (true) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n",
    "id": "153",
    "name": "mutants/153/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -657,7 +657,8 @@\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n-            if (surplusInputToken >= shortfall) {\n+            /// IfStatementMutation(`surplusInputToken >= shortfall` |==> `false`) of: `if (surplusInputToken >= shortfall) {`\n+            if (false) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n",
    "id": "154",
    "name": "mutants/154/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -657,7 +657,8 @@\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n-            if (surplusInputToken >= shortfall) {\n+            /// SwapArgumentsOperatorMutation(`surplusInputToken >= shortfall` |==> `shortfall >= surplusInputToken`) of: `if (surplusInputToken >= shortfall) {`\n+            if (shortfall >= surplusInputToken) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n",
    "id": "155",
    "name": "mutants/155/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -661,7 +661,8 @@\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n-            } else if (protectLoss) {\n+            /// IfStatementMutation(`protectLoss` |==> `true`) of: `} else if (protectLoss) {`\n+            } else if (true) {\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n                 inputToken.safeTransfer(msg.sender, received);\n",
    "id": "156",
    "name": "mutants/156/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -661,7 +661,8 @@\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n-            } else if (protectLoss) {\n+            /// IfStatementMutation(`protectLoss` |==> `false`) of: `} else if (protectLoss) {`\n+            } else if (false) {\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n                 inputToken.safeTransfer(msg.sender, received);\n",
    "id": "157",
    "name": "mutants/157/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -664,7 +664,8 @@\n             } else if (protectLoss) {\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n-                inputToken.safeTransfer(msg.sender, received);\n+                /// DeleteExpressionMutation(`inputToken.safeTransfer(msg.sender, received)` |==> `assert(true)`) of: `inputToken.safeTransfer(msg.sender, received);`\n+                assert(true);\n                 actualWithdrawn = received;\n             }\n         } else {\n",
    "id": "158",
    "name": "mutants/158/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -665,7 +665,8 @@\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n                 inputToken.safeTransfer(msg.sender, received);\n-                actualWithdrawn = received;\n+                /// DeleteExpressionMutation(`actualWithdrawn = received` |==> `assert(true)`) of: `actualWithdrawn = received;`\n+                assert(true);\n             }\n         } else {\n             inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "159",
    "name": "mutants/159/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -665,7 +665,8 @@\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n                 inputToken.safeTransfer(msg.sender, received);\n-                actualWithdrawn = received;\n+                /// AssignmentMutation(`received` |==> `0`) of: `actualWithdrawn = received;`\n+                actualWithdrawn = 0;\n             }\n         } else {\n             inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "160",
    "name": "mutants/160/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -665,7 +665,8 @@\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n                 inputToken.safeTransfer(msg.sender, received);\n-                actualWithdrawn = received;\n+                /// AssignmentMutation(`received` |==> `1`) of: `actualWithdrawn = received;`\n+                actualWithdrawn = 1;\n             }\n         } else {\n             inputToken.safeTransfer(msg.sender, amount);\n",
    "id": "161",
    "name": "mutants/161/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -662,7 +662,8 @@\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n             } else if (protectLoss) {\n-                revert(\"Shortfall exceeds surplus\");\n+                /// DeleteExpressionMutation(`revert(\"Shortfall exceeds surplus\")` |==> `assert(true)`) of: `revert(\"Shortfall exceeds surplus\");`\n+                assert(true);\n             } else {\n                 inputToken.safeTransfer(msg.sender, received);\n                 actualWithdrawn = received;\n",
    "id": "162",
    "name": "mutants/162/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -658,7 +658,8 @@\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n-                surplusInputToken -= shortfall;\n+                /// DeleteExpressionMutation(`surplusInputToken -= shortfall` |==> `assert(true)`) of: `surplusInputToken -= shortfall;`\n+                assert(true);\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n             } else if (protectLoss) {\n",
    "id": "163",
    "name": "mutants/163/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -658,7 +658,8 @@\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n-                surplusInputToken -= shortfall;\n+                /// AssignmentMutation(`shortfall` |==> `0`) of: `surplusInputToken -= shortfall;`\n+                surplusInputToken -= 0;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n             } else if (protectLoss) {\n",
    "id": "164",
    "name": "mutants/164/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -658,7 +658,8 @@\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n-                surplusInputToken -= shortfall;\n+                /// AssignmentMutation(`shortfall` |==> `1`) of: `surplusInputToken -= shortfall;`\n+                surplusInputToken -= 1;\n                 inputToken.safeTransfer(msg.sender, amount);\n                 actualWithdrawn = amount;\n             } else if (protectLoss) {\n",
    "id": "165",
    "name": "mutants/165/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -659,7 +659,8 @@\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n-                inputToken.safeTransfer(msg.sender, amount);\n+                /// DeleteExpressionMutation(`inputToken.safeTransfer(msg.sender, amount)` |==> `assert(true)`) of: `inputToken.safeTransfer(msg.sender, amount);`\n+                assert(true);\n                 actualWithdrawn = amount;\n             } else if (protectLoss) {\n                 revert(\"Shortfall exceeds surplus\");\n",
    "id": "166",
    "name": "mutants/166/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -660,7 +660,8 @@\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n-                actualWithdrawn = amount;\n+                /// DeleteExpressionMutation(`actualWithdrawn = amount` |==> `assert(true)`) of: `actualWithdrawn = amount;`\n+                assert(true);\n             } else if (protectLoss) {\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n",
    "id": "167",
    "name": "mutants/167/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -660,7 +660,8 @@\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n-                actualWithdrawn = amount;\n+                /// AssignmentMutation(`amount` |==> `0`) of: `actualWithdrawn = amount;`\n+                actualWithdrawn = 0;\n             } else if (protectLoss) {\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n",
    "id": "168",
    "name": "mutants/168/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -660,7 +660,8 @@\n             if (surplusInputToken >= shortfall) {\n                 surplusInputToken -= shortfall;\n                 inputToken.safeTransfer(msg.sender, amount);\n-                actualWithdrawn = amount;\n+                /// AssignmentMutation(`amount` |==> `1`) of: `actualWithdrawn = amount;`\n+                actualWithdrawn = 1;\n             } else if (protectLoss) {\n                 revert(\"Shortfall exceeds surplus\");\n             } else {\n",
    "id": "169",
    "name": "mutants/169/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// DeleteExpressionMutation(`surplusInputToken += received - amount` |==> `assert(true)`) of: `surplusInputToken += received - amount;`\n+            assert(true);\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "170",
    "name": "mutants/170/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// AssignmentMutation(`received - amount` |==> `0`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += 0;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "171",
    "name": "mutants/171/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// AssignmentMutation(`received - amount` |==> `1`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += 1;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "172",
    "name": "mutants/172/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// BinaryOpMutation(`-` |==> `+`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += received+amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "173",
    "name": "mutants/173/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// BinaryOpMutation(`-` |==> `*`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += received*amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "174",
    "name": "mutants/174/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// BinaryOpMutation(`-` |==> `/`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += received/amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "175",
    "name": "mutants/175/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// BinaryOpMutation(`-` |==> `%`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += received%amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "176",
    "name": "mutants/176/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// BinaryOpMutation(`-` |==> `**`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += received**amount;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "177",
    "name": "mutants/177/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -652,7 +652,8 @@\n \n         uint256 actualWithdrawn;\n         if (received > amount) {\n-            surplusInputToken += received - amount;\n+            /// SwapArgumentsOperatorMutation(`received - amount` |==> `amount - received`) of: `surplusInputToken += received - amount;`\n+            surplusInputToken += amount - received;\n             inputToken.safeTransfer(msg.sender, amount);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n",
    "id": "178",
    "name": "mutants/178/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -653,7 +653,8 @@\n         uint256 actualWithdrawn;\n         if (received > amount) {\n             surplusInputToken += received - amount;\n-            inputToken.safeTransfer(msg.sender, amount);\n+            /// DeleteExpressionMutation(`inputToken.safeTransfer(msg.sender, amount)` |==> `assert(true)`) of: `inputToken.safeTransfer(msg.sender, amount);`\n+            assert(true);\n             actualWithdrawn = amount;\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n",
    "id": "179",
    "name": "mutants/179/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -654,7 +654,8 @@\n         if (received > amount) {\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n-            actualWithdrawn = amount;\n+            /// DeleteExpressionMutation(`actualWithdrawn = amount` |==> `assert(true)`) of: `actualWithdrawn = amount;`\n+            assert(true);\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n",
    "id": "180",
    "name": "mutants/180/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -654,7 +654,8 @@\n         if (received > amount) {\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n-            actualWithdrawn = amount;\n+            /// AssignmentMutation(`amount` |==> `0`) of: `actualWithdrawn = amount;`\n+            actualWithdrawn = 0;\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n",
    "id": "181",
    "name": "mutants/181/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -654,7 +654,8 @@\n         if (received > amount) {\n             surplusInputToken += received - amount;\n             inputToken.safeTransfer(msg.sender, amount);\n-            actualWithdrawn = amount;\n+            /// AssignmentMutation(`amount` |==> `1`) of: `actualWithdrawn = amount;`\n+            actualWithdrawn = 1;\n         } else if (received < amount) {\n             uint256 shortfall = amount - received;\n             if (surplusInputToken >= shortfall) {\n",
    "id": "182",
    "name": "mutants/182/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -684,7 +684,8 @@\n         uint256 flaxValue = IYieldsSource(yieldSource).claimRewards();\n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// IfStatementMutation(`sFlaxAmount > 0 && flaxPerSFlax > 0` |==> `true`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (true) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "183",
    "name": "mutants/183/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -684,7 +684,8 @@\n         uint256 flaxValue = IYieldsSource(yieldSource).claimRewards();\n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// IfStatementMutation(`sFlaxAmount > 0 && flaxPerSFlax > 0` |==> `false`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (false) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "184",
    "name": "mutants/184/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -684,7 +684,8 @@\n         uint256 flaxValue = IYieldsSource(yieldSource).claimRewards();\n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// SwapArgumentsOperatorMutation(`sFlaxAmount > 0` |==> `0 > sFlaxAmount`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (0 > sFlaxAmount && flaxPerSFlax > 0) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "185",
    "name": "mutants/185/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -684,7 +684,8 @@\n         uint256 flaxValue = IYieldsSource(yieldSource).claimRewards();\n         uint256 totalFlax = flaxValue;\n \n-        if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n+        /// SwapArgumentsOperatorMutation(`flaxPerSFlax > 0` |==> `0 > flaxPerSFlax`) of: `if (sFlaxAmount > 0 && flaxPerSFlax > 0) {`\n+        if (sFlaxAmount > 0 && 0 > flaxPerSFlax) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n",
    "id": "186",
    "name": "mutants/186/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `+`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)+1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "187",
    "name": "mutants/187/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `-`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)-1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "188",
    "name": "mutants/188/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `*`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)*1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "189",
    "name": "mutants/189/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `%`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)%1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "190",
    "name": "mutants/190/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`/` |==> `**`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax)**1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "191",
    "name": "mutants/191/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// SwapArgumentsOperatorMutation(`(sFlaxAmount * flaxPerSFlax) / 1e18` |==> `1e18 / (sFlaxAmount * flaxPerSFlax)`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = 1e18 / (sFlaxAmount * flaxPerSFlax);\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "192",
    "name": "mutants/192/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `+`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount+flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "193",
    "name": "mutants/193/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `-`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount-flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "194",
    "name": "mutants/194/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `/`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount/flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "195",
    "name": "mutants/195/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `%`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount%flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "196",
    "name": "mutants/196/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -685,7 +685,8 @@\n         uint256 totalFlax = flaxValue;\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n-            uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n+            /// BinaryOpMutation(`*` |==> `**`) of: `uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;`\n+            uint256 flaxBoost = (sFlaxAmount**flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n",
    "id": "197",
    "name": "mutants/197/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -686,7 +686,8 @@\n \n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n-            sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n+            /// DeleteExpressionMutation(`sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount)` |==> `assert(true)`) of: `sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);`\n+            assert(true);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n             totalFlax += flaxBoost;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n",
    "id": "198",
    "name": "mutants/198/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -687,7 +687,8 @@\n         if (sFlaxAmount > 0 && flaxPerSFlax > 0) {\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n-            IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n+            /// DeleteExpressionMutation(`IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount)` |==> `assert(true)`) of: `IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);`\n+            assert(true);\n             totalFlax += flaxBoost;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n",
    "id": "199",
    "name": "mutants/199/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -688,7 +688,8 @@\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n-            totalFlax += flaxBoost;\n+            /// DeleteExpressionMutation(`totalFlax += flaxBoost` |==> `assert(true)`) of: `totalFlax += flaxBoost;`\n+            assert(true);\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n",
    "id": "200",
    "name": "mutants/200/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -688,7 +688,8 @@\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n-            totalFlax += flaxBoost;\n+            /// AssignmentMutation(`flaxBoost` |==> `0`) of: `totalFlax += flaxBoost;`\n+            totalFlax += 0;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n",
    "id": "201",
    "name": "mutants/201/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -688,7 +688,8 @@\n             uint256 flaxBoost = (sFlaxAmount * flaxPerSFlax) / 1e18;\n             sFlaxToken.safeTransferFrom(msg.sender, address(this), sFlaxAmount);\n             IBurnableERC20(address(sFlaxToken)).burn(sFlaxAmount);\n-            totalFlax += flaxBoost;\n+            /// AssignmentMutation(`flaxBoost` |==> `1`) of: `totalFlax += flaxBoost;`\n+            totalFlax += 1;\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n",
    "id": "202",
    "name": "mutants/202/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -692,7 +692,8 @@\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n-        if (totalFlax > 0) {\n+        /// IfStatementMutation(`totalFlax > 0` |==> `true`) of: `if (totalFlax > 0) {`\n+        if (true) {\n             flaxToken.safeTransfer(msg.sender, totalFlax);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n",
    "id": "203",
    "name": "mutants/203/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -692,7 +692,8 @@\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n-        if (totalFlax > 0) {\n+        /// IfStatementMutation(`totalFlax > 0` |==> `false`) of: `if (totalFlax > 0) {`\n+        if (false) {\n             flaxToken.safeTransfer(msg.sender, totalFlax);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n",
    "id": "204",
    "name": "mutants/204/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -692,7 +692,8 @@\n             emit SFlaxBurned(msg.sender, sFlaxAmount, flaxBoost);\n         }\n \n-        if (totalFlax > 0) {\n+        /// SwapArgumentsOperatorMutation(`totalFlax > 0` |==> `0 > totalFlax`) of: `if (totalFlax > 0) {`\n+        if (0 > totalFlax) {\n             flaxToken.safeTransfer(msg.sender, totalFlax);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n",
    "id": "205",
    "name": "mutants/205/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -693,7 +693,8 @@\n         }\n \n         if (totalFlax > 0) {\n-            flaxToken.safeTransfer(msg.sender, totalFlax);\n+            /// DeleteExpressionMutation(`flaxToken.safeTransfer(msg.sender, totalFlax)` |==> `assert(true)`) of: `flaxToken.safeTransfer(msg.sender, totalFlax);`\n+            assert(true);\n             emit RewardsClaimed(msg.sender, totalFlax);\n         }\n     }\n",
    "id": "206",
    "name": "mutants/206/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -704,7 +704,8 @@\n      * @dev Only callable by owner\n      */\n     function setFlaxPerSFlax(uint256 _flaxPerSFlax) external onlyOwner {\n-        flaxPerSFlax = _flaxPerSFlax;\n+        /// DeleteExpressionMutation(`flaxPerSFlax = _flaxPerSFlax` |==> `assert(true)`) of: `flaxPerSFlax = _flaxPerSFlax;`\n+        assert(true);\n         emit FlaxPerSFlaxUpdated(_flaxPerSFlax);\n     }\n \n",
    "id": "207",
    "name": "mutants/207/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -704,7 +704,8 @@\n      * @dev Only callable by owner\n      */\n     function setFlaxPerSFlax(uint256 _flaxPerSFlax) external onlyOwner {\n-        flaxPerSFlax = _flaxPerSFlax;\n+        /// AssignmentMutation(`_flaxPerSFlax` |==> `0`) of: `flaxPerSFlax = _flaxPerSFlax;`\n+        flaxPerSFlax = 0;\n         emit FlaxPerSFlaxUpdated(_flaxPerSFlax);\n     }\n \n",
    "id": "208",
    "name": "mutants/208/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -704,7 +704,8 @@\n      * @dev Only callable by owner\n      */\n     function setFlaxPerSFlax(uint256 _flaxPerSFlax) external onlyOwner {\n-        flaxPerSFlax = _flaxPerSFlax;\n+        /// AssignmentMutation(`_flaxPerSFlax` |==> `1`) of: `flaxPerSFlax = _flaxPerSFlax;`\n+        flaxPerSFlax = 1;\n         emit FlaxPerSFlaxUpdated(_flaxPerSFlax);\n     }\n \n",
    "id": "209",
    "name": "mutants/209/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -719,7 +719,8 @@\n \n         // Claim and sell rewards for inputToken\n         uint256 inputTokenAmount = IYieldsSource(oldYieldSource).claimAndSellForInputToken();\n-        if (inputTokenAmount > 0) {\n+        /// IfStatementMutation(`inputTokenAmount > 0` |==> `true`) of: `if (inputTokenAmount > 0) {`\n+        if (true) {\n             surplusInputToken += inputTokenAmount;\n         }\n \n",
    "id": "210",
    "name": "mutants/210/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -719,7 +719,8 @@\n \n         // Claim and sell rewards for inputToken\n         uint256 inputTokenAmount = IYieldsSource(oldYieldSource).claimAndSellForInputToken();\n-        if (inputTokenAmount > 0) {\n+        /// IfStatementMutation(`inputTokenAmount > 0` |==> `false`) of: `if (inputTokenAmount > 0) {`\n+        if (false) {\n             surplusInputToken += inputTokenAmount;\n         }\n \n",
    "id": "211",
    "name": "mutants/211/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -719,7 +719,8 @@\n \n         // Claim and sell rewards for inputToken\n         uint256 inputTokenAmount = IYieldsSource(oldYieldSource).claimAndSellForInputToken();\n-        if (inputTokenAmount > 0) {\n+        /// SwapArgumentsOperatorMutation(`inputTokenAmount > 0` |==> `0 > inputTokenAmount`) of: `if (inputTokenAmount > 0) {`\n+        if (0 > inputTokenAmount) {\n             surplusInputToken += inputTokenAmount;\n         }\n \n",
    "id": "212",
    "name": "mutants/212/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -720,7 +720,8 @@\n         // Claim and sell rewards for inputToken\n         uint256 inputTokenAmount = IYieldsSource(oldYieldSource).claimAndSellForInputToken();\n         if (inputTokenAmount > 0) {\n-            surplusInputToken += inputTokenAmount;\n+            /// DeleteExpressionMutation(`surplusInputToken += inputTokenAmount` |==> `assert(true)`) of: `surplusInputToken += inputTokenAmount;`\n+            assert(true);\n         }\n \n         // Withdraw all funds\n",
    "id": "213",
    "name": "mutants/213/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -720,7 +720,8 @@\n         // Claim and sell rewards for inputToken\n         uint256 inputTokenAmount = IYieldsSource(oldYieldSource).claimAndSellForInputToken();\n         if (inputTokenAmount > 0) {\n-            surplusInputToken += inputTokenAmount;\n+            /// AssignmentMutation(`inputTokenAmount` |==> `0`) of: `surplusInputToken += inputTokenAmount;`\n+            surplusInputToken += 0;\n         }\n \n         // Withdraw all funds\n",
    "id": "214",
    "name": "mutants/214/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -720,7 +720,8 @@\n         // Claim and sell rewards for inputToken\n         uint256 inputTokenAmount = IYieldsSource(oldYieldSource).claimAndSellForInputToken();\n         if (inputTokenAmount > 0) {\n-            surplusInputToken += inputTokenAmount;\n+            /// AssignmentMutation(`inputTokenAmount` |==> `1`) of: `surplusInputToken += inputTokenAmount;`\n+            surplusInputToken += 1;\n         }\n \n         // Withdraw all funds\n",
    "id": "215",
    "name": "mutants/215/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -725,7 +725,8 @@\n \n         // Withdraw all funds\n         uint256 amount = totalDeposits;\n-        if (amount > 0) {\n+        /// IfStatementMutation(`amount > 0` |==> `true`) of: `if (amount > 0) {`\n+        if (true) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n             totalDeposits = 0;\n             surplusInputToken += received;\n",
    "id": "216",
    "name": "mutants/216/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -725,7 +725,8 @@\n \n         // Withdraw all funds\n         uint256 amount = totalDeposits;\n-        if (amount > 0) {\n+        /// IfStatementMutation(`amount > 0` |==> `false`) of: `if (amount > 0) {`\n+        if (false) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n             totalDeposits = 0;\n             surplusInputToken += received;\n",
    "id": "217",
    "name": "mutants/217/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -725,7 +725,8 @@\n \n         // Withdraw all funds\n         uint256 amount = totalDeposits;\n-        if (amount > 0) {\n+        /// SwapArgumentsOperatorMutation(`amount > 0` |==> `0 > amount`) of: `if (amount > 0) {`\n+        if (0 > amount) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n             totalDeposits = 0;\n             surplusInputToken += received;\n",
    "id": "218",
    "name": "mutants/218/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -727,7 +727,8 @@\n         uint256 amount = totalDeposits;\n         if (amount > 0) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n-            totalDeposits = 0;\n+            /// DeleteExpressionMutation(`totalDeposits = 0` |==> `assert(true)`) of: `totalDeposits = 0;`\n+            assert(true);\n             surplusInputToken += received;\n         }\n \n",
    "id": "219",
    "name": "mutants/219/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -727,7 +727,8 @@\n         uint256 amount = totalDeposits;\n         if (amount > 0) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n-            totalDeposits = 0;\n+            /// AssignmentMutation(`0` |==> `1`) of: `totalDeposits = 0;`\n+            totalDeposits = 1;\n             surplusInputToken += received;\n         }\n \n",
    "id": "220",
    "name": "mutants/220/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -728,7 +728,8 @@\n         if (amount > 0) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n             totalDeposits = 0;\n-            surplusInputToken += received;\n+            /// DeleteExpressionMutation(`surplusInputToken += received` |==> `assert(true)`) of: `surplusInputToken += received;`\n+            assert(true);\n         }\n \n         // Deposit into new yieldSource\n",
    "id": "221",
    "name": "mutants/221/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -728,7 +728,8 @@\n         if (amount > 0) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n             totalDeposits = 0;\n-            surplusInputToken += received;\n+            /// AssignmentMutation(`received` |==> `0`) of: `surplusInputToken += received;`\n+            surplusInputToken += 0;\n         }\n \n         // Deposit into new yieldSource\n",
    "id": "222",
    "name": "mutants/222/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -728,7 +728,8 @@\n         if (amount > 0) {\n             (uint256 received, ) = IYieldsSource(oldYieldSource).withdraw(amount);\n             totalDeposits = 0;\n-            surplusInputToken += received;\n+            /// AssignmentMutation(`received` |==> `1`) of: `surplusInputToken += received;`\n+            surplusInputToken += 1;\n         }\n \n         // Deposit into new yieldSource\n",
    "id": "223",
    "name": "mutants/223/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -732,7 +732,8 @@\n         }\n \n         // Deposit into new yieldSource\n-        if (surplusInputToken > 0) {\n+        /// IfStatementMutation(`surplusInputToken > 0` |==> `true`) of: `if (surplusInputToken > 0) {`\n+        if (true) {\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n",
    "id": "224",
    "name": "mutants/224/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -732,7 +732,8 @@\n         }\n \n         // Deposit into new yieldSource\n-        if (surplusInputToken > 0) {\n+        /// IfStatementMutation(`surplusInputToken > 0` |==> `false`) of: `if (surplusInputToken > 0) {`\n+        if (false) {\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n",
    "id": "225",
    "name": "mutants/225/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -732,7 +732,8 @@\n         }\n \n         // Deposit into new yieldSource\n-        if (surplusInputToken > 0) {\n+        /// SwapArgumentsOperatorMutation(`surplusInputToken > 0` |==> `0 > surplusInputToken`) of: `if (surplusInputToken > 0) {`\n+        if (0 > surplusInputToken) {\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n",
    "id": "226",
    "name": "mutants/226/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -733,7 +733,8 @@\n \n         // Deposit into new yieldSource\n         if (surplusInputToken > 0) {\n-            inputToken.approve(newYieldSource, surplusInputToken);\n+            /// DeleteExpressionMutation(`inputToken.approve(newYieldSource, surplusInputToken)` |==> `assert(true)`) of: `inputToken.approve(newYieldSource, surplusInputToken);`\n+            assert(true);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n             totalDeposits = deposited;  // Track input token amount, not LP amount\n",
    "id": "227",
    "name": "mutants/227/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -735,7 +735,8 @@\n         if (surplusInputToken > 0) {\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n-            IYieldsSource(newYieldSource).deposit(surplusInputToken);\n+            /// DeleteExpressionMutation(`IYieldsSource(newYieldSource).deposit(surplusInputToken)` |==> `assert(true)`) of: `IYieldsSource(newYieldSource).deposit(surplusInputToken);`\n+            assert(true);\n             totalDeposits = deposited;  // Track input token amount, not LP amount\n             surplusInputToken = 0;\n         }\n",
    "id": "228",
    "name": "mutants/228/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -736,7 +736,8 @@\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n-            totalDeposits = deposited;  // Track input token amount, not LP amount\n+            /// DeleteExpressionMutation(`totalDeposits = deposited` |==> `assert(true)`) of: `totalDeposits = deposited;  // Track input token amount, not LP amount`\n+            assert(true);  // Track input token amount, not LP amount\n             surplusInputToken = 0;\n         }\n \n",
    "id": "229",
    "name": "mutants/229/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -736,7 +736,8 @@\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n-            totalDeposits = deposited;  // Track input token amount, not LP amount\n+            /// AssignmentMutation(`deposited` |==> `0`) of: `totalDeposits = deposited;  // Track input token amount, not LP amount`\n+            totalDeposits = 0;  // Track input token amount, not LP amount\n             surplusInputToken = 0;\n         }\n \n",
    "id": "230",
    "name": "mutants/230/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -736,7 +736,8 @@\n             inputToken.approve(newYieldSource, surplusInputToken);\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n-            totalDeposits = deposited;  // Track input token amount, not LP amount\n+            /// AssignmentMutation(`deposited` |==> `1`) of: `totalDeposits = deposited;  // Track input token amount, not LP amount`\n+            totalDeposits = 1;  // Track input token amount, not LP amount\n             surplusInputToken = 0;\n         }\n \n",
    "id": "231",
    "name": "mutants/231/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -737,7 +737,8 @@\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n             totalDeposits = deposited;  // Track input token amount, not LP amount\n-            surplusInputToken = 0;\n+            /// DeleteExpressionMutation(`surplusInputToken = 0` |==> `assert(true)`) of: `surplusInputToken = 0;`\n+            assert(true);\n         }\n \n         yieldSource = newYieldSource;\n",
    "id": "232",
    "name": "mutants/232/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -737,7 +737,8 @@\n             uint256 deposited = surplusInputToken;\n             IYieldsSource(newYieldSource).deposit(surplusInputToken);\n             totalDeposits = deposited;  // Track input token amount, not LP amount\n-            surplusInputToken = 0;\n+            /// AssignmentMutation(`0` |==> `1`) of: `surplusInputToken = 0;`\n+            surplusInputToken = 1;\n         }\n \n         yieldSource = newYieldSource;\n",
    "id": "233",
    "name": "mutants/233/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -740,7 +740,8 @@\n             surplusInputToken = 0;\n         }\n \n-        yieldSource = newYieldSource;\n+        /// DeleteExpressionMutation(`yieldSource = newYieldSource` |==> `assert(true)`) of: `yieldSource = newYieldSource;`\n+        assert(true);\n         emit YieldSourceMigrated(oldYieldSource, newYieldSource);\n     }\n \n",
    "id": "234",
    "name": "mutants/234/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -759,7 +759,8 @@\n      * @dev Emergency state prevents deposits, claims, and migrations\n      */\n     function setEmergencyState(bool state) external onlyOwner {\n-        emergencyState = state;\n+        /// DeleteExpressionMutation(`emergencyState = state` |==> `assert(true)`) of: `emergencyState = state;`\n+        assert(true);\n         emit EmergencyStateChanged(state);\n     }\n     \n",
    "id": "235",
    "name": "mutants/235/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -759,7 +759,8 @@\n      * @dev Emergency state prevents deposits, claims, and migrations\n      */\n     function setEmergencyState(bool state) external onlyOwner {\n-        emergencyState = state;\n+        /// AssignmentMutation(`state` |==> `true`) of: `emergencyState = state;`\n+        emergencyState = true;\n         emit EmergencyStateChanged(state);\n     }\n     \n",
    "id": "236",
    "name": "mutants/236/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -759,7 +759,8 @@\n      * @dev Emergency state prevents deposits, claims, and migrations\n      */\n     function setEmergencyState(bool state) external onlyOwner {\n-        emergencyState = state;\n+        /// AssignmentMutation(`state` |==> `false`) of: `emergencyState = state;`\n+        emergencyState = false;\n         emit EmergencyStateChanged(state);\n     }\n     \n",
    "id": "237",
    "name": "mutants/237/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -770,7 +770,8 @@\n      * @dev Only callable by owner for emergency recovery\n      */\n     function emergencyWithdraw(address token, address recipient) external onlyOwner {\n-        require(token != address(0), \"Invalid token address\");\n+        /// DeleteExpressionMutation(`require(token != address(0), \"Invalid token address\")` |==> `assert(true)`) of: `require(token != address(0), \"Invalid token address\");`\n+        assert(true);\n         \n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n",
    "id": "238",
    "name": "mutants/238/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -770,7 +770,8 @@\n      * @dev Only callable by owner for emergency recovery\n      */\n     function emergencyWithdraw(address token, address recipient) external onlyOwner {\n-        require(token != address(0), \"Invalid token address\");\n+        /// RequireMutation(`token != address(0)` |==> `true`) of: `require(token != address(0), \"Invalid token address\");`\n+        require(true, \"Invalid token address\");\n         \n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n",
    "id": "239",
    "name": "mutants/239/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -770,7 +770,8 @@\n      * @dev Only callable by owner for emergency recovery\n      */\n     function emergencyWithdraw(address token, address recipient) external onlyOwner {\n-        require(token != address(0), \"Invalid token address\");\n+        /// RequireMutation(`token != address(0)` |==> `false`) of: `require(token != address(0), \"Invalid token address\");`\n+        require(false, \"Invalid token address\");\n         \n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n",
    "id": "240",
    "name": "mutants/240/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -775,7 +775,8 @@\n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n-        if (balance > 0) {\n+        /// IfStatementMutation(`balance > 0` |==> `true`) of: `if (balance > 0) {`\n+        if (true) {\n             tokenContract.safeTransfer(recipient, balance);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n",
    "id": "241",
    "name": "mutants/241/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -775,7 +775,8 @@\n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n-        if (balance > 0) {\n+        /// IfStatementMutation(`balance > 0` |==> `false`) of: `if (balance > 0) {`\n+        if (false) {\n             tokenContract.safeTransfer(recipient, balance);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n",
    "id": "242",
    "name": "mutants/242/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -775,7 +775,8 @@\n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n-        if (balance > 0) {\n+        /// SwapArgumentsOperatorMutation(`balance > 0` |==> `0 > balance`) of: `if (balance > 0) {`\n+        if (0 > balance) {\n             tokenContract.safeTransfer(recipient, balance);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n",
    "id": "243",
    "name": "mutants/243/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -776,7 +776,8 @@\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n         if (balance > 0) {\n-            tokenContract.safeTransfer(recipient, balance);\n+            /// DeleteExpressionMutation(`tokenContract.safeTransfer(recipient, balance)` |==> `assert(true)`) of: `tokenContract.safeTransfer(recipient, balance);`\n+            assert(true);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n     }\n",
    "id": "244",
    "name": "mutants/244/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -789,7 +789,8 @@\n     function emergencyWithdrawETH(address payable recipient) external onlyOwner {\n         uint256 balance = address(this).balance;\n         \n-        if (balance > 0) {\n+        /// IfStatementMutation(`balance > 0` |==> `true`) of: `if (balance > 0) {`\n+        if (true) {\n             recipient.transfer(balance);\n             emit EmergencyWithdrawal(address(0), recipient, balance);\n         }\n",
    "id": "245",
    "name": "mutants/245/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -789,7 +789,8 @@\n     function emergencyWithdrawETH(address payable recipient) external onlyOwner {\n         uint256 balance = address(this).balance;\n         \n-        if (balance > 0) {\n+        /// IfStatementMutation(`balance > 0` |==> `false`) of: `if (balance > 0) {`\n+        if (false) {\n             recipient.transfer(balance);\n             emit EmergencyWithdrawal(address(0), recipient, balance);\n         }\n",
    "id": "246",
    "name": "mutants/246/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -789,7 +789,8 @@\n     function emergencyWithdrawETH(address payable recipient) external onlyOwner {\n         uint256 balance = address(this).balance;\n         \n-        if (balance > 0) {\n+        /// SwapArgumentsOperatorMutation(`balance > 0` |==> `0 > balance`) of: `if (balance > 0) {`\n+        if (0 > balance) {\n             recipient.transfer(balance);\n             emit EmergencyWithdrawal(address(0), recipient, balance);\n         }\n",
    "id": "247",
    "name": "mutants/247/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -790,7 +790,8 @@\n         uint256 balance = address(this).balance;\n         \n         if (balance > 0) {\n-            recipient.transfer(balance);\n+            /// DeleteExpressionMutation(`recipient.transfer(balance)` |==> `assert(true)`) of: `recipient.transfer(balance);`\n+            assert(true);\n             emit EmergencyWithdrawal(address(0), recipient, balance);\n         }\n     }\n",
    "id": "248",
    "name": "mutants/248/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -803,7 +803,8 @@\n      * @dev First attempts to withdraw from yield source if withdrawing input token\n      */\n     function emergencyWithdrawFromYieldSource(address token, address recipient) external onlyOwner {\n-        require(emergencyState, \"Not in emergency state\");\n+        /// DeleteExpressionMutation(`require(emergencyState, \"Not in emergency state\")` |==> `assert(true)`) of: `require(emergencyState, \"Not in emergency state\");`\n+        assert(true);\n         \n         // First withdraw all funds from yield source if it's the input token\n         if (token == address(inputToken) && totalDeposits > 0) {\n",
    "id": "249",
    "name": "mutants/249/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -803,7 +803,8 @@\n      * @dev First attempts to withdraw from yield source if withdrawing input token\n      */\n     function emergencyWithdrawFromYieldSource(address token, address recipient) external onlyOwner {\n-        require(emergencyState, \"Not in emergency state\");\n+        /// RequireMutation(`emergencyState` |==> `true`) of: `require(emergencyState, \"Not in emergency state\");`\n+        require(true, \"Not in emergency state\");\n         \n         // First withdraw all funds from yield source if it's the input token\n         if (token == address(inputToken) && totalDeposits > 0) {\n",
    "id": "250",
    "name": "mutants/250/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -803,7 +803,8 @@\n      * @dev First attempts to withdraw from yield source if withdrawing input token\n      */\n     function emergencyWithdrawFromYieldSource(address token, address recipient) external onlyOwner {\n-        require(emergencyState, \"Not in emergency state\");\n+        /// RequireMutation(`emergencyState` |==> `false`) of: `require(emergencyState, \"Not in emergency state\");`\n+        require(false, \"Not in emergency state\");\n         \n         // First withdraw all funds from yield source if it's the input token\n         if (token == address(inputToken) && totalDeposits > 0) {\n",
    "id": "251",
    "name": "mutants/251/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -806,7 +806,8 @@\n         require(emergencyState, \"Not in emergency state\");\n         \n         // First withdraw all funds from yield source if it's the input token\n-        if (token == address(inputToken) && totalDeposits > 0) {\n+        /// IfStatementMutation(`token == address(inputToken) && totalDeposits > 0` |==> `true`) of: `if (token == address(inputToken) && totalDeposits > 0) {`\n+        if (true) {\n             (uint256 received, ) = IYieldsSource(yieldSource).withdraw(totalDeposits);\n             \n             // Set rebase multiplier to 0 - this makes all user deposits effectively 0\n",
    "id": "252",
    "name": "mutants/252/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -806,7 +806,8 @@\n         require(emergencyState, \"Not in emergency state\");\n         \n         // First withdraw all funds from yield source if it's the input token\n-        if (token == address(inputToken) && totalDeposits > 0) {\n+        /// IfStatementMutation(`token == address(inputToken) && totalDeposits > 0` |==> `false`) of: `if (token == address(inputToken) && totalDeposits > 0) {`\n+        if (false) {\n             (uint256 received, ) = IYieldsSource(yieldSource).withdraw(totalDeposits);\n             \n             // Set rebase multiplier to 0 - this makes all user deposits effectively 0\n",
    "id": "253",
    "name": "mutants/253/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -806,7 +806,8 @@\n         require(emergencyState, \"Not in emergency state\");\n         \n         // First withdraw all funds from yield source if it's the input token\n-        if (token == address(inputToken) && totalDeposits > 0) {\n+        /// SwapArgumentsOperatorMutation(`totalDeposits > 0` |==> `0 > totalDeposits`) of: `if (token == address(inputToken) && totalDeposits > 0) {`\n+        if (token == address(inputToken) && 0 > totalDeposits) {\n             (uint256 received, ) = IYieldsSource(yieldSource).withdraw(totalDeposits);\n             \n             // Set rebase multiplier to 0 - this makes all user deposits effectively 0\n",
    "id": "254",
    "name": "mutants/254/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -811,7 +811,8 @@\n             \n             // Set rebase multiplier to 0 - this makes all user deposits effectively 0\n             uint256 oldMultiplier = rebaseMultiplier;\n-            rebaseMultiplier = 0;\n+            /// DeleteExpressionMutation(`rebaseMultiplier = 0` |==> `assert(true)`) of: `rebaseMultiplier = 0;`\n+            assert(true);\n             \n             surplusInputToken += received;\n             \n",
    "id": "255",
    "name": "mutants/255/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -811,7 +811,8 @@\n             \n             // Set rebase multiplier to 0 - this makes all user deposits effectively 0\n             uint256 oldMultiplier = rebaseMultiplier;\n-            rebaseMultiplier = 0;\n+            /// AssignmentMutation(`0` |==> `1`) of: `rebaseMultiplier = 0;`\n+            rebaseMultiplier = 1;\n             \n             surplusInputToken += received;\n             \n",
    "id": "256",
    "name": "mutants/256/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -813,7 +813,8 @@\n             uint256 oldMultiplier = rebaseMultiplier;\n             rebaseMultiplier = 0;\n             \n-            surplusInputToken += received;\n+            /// DeleteExpressionMutation(`surplusInputToken += received` |==> `assert(true)`) of: `surplusInputToken += received;`\n+            assert(true);\n             \n             emit RebaseMultiplierUpdated(oldMultiplier, 0);\n             emit VaultPermanentlyDisabled();\n",
    "id": "257",
    "name": "mutants/257/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -813,7 +813,8 @@\n             uint256 oldMultiplier = rebaseMultiplier;\n             rebaseMultiplier = 0;\n             \n-            surplusInputToken += received;\n+            /// AssignmentMutation(`received` |==> `0`) of: `surplusInputToken += received;`\n+            surplusInputToken += 0;\n             \n             emit RebaseMultiplierUpdated(oldMultiplier, 0);\n             emit VaultPermanentlyDisabled();\n",
    "id": "258",
    "name": "mutants/258/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -813,7 +813,8 @@\n             uint256 oldMultiplier = rebaseMultiplier;\n             rebaseMultiplier = 0;\n             \n-            surplusInputToken += received;\n+            /// AssignmentMutation(`received` |==> `1`) of: `surplusInputToken += received;`\n+            surplusInputToken += 1;\n             \n             emit RebaseMultiplierUpdated(oldMultiplier, 0);\n             emit VaultPermanentlyDisabled();\n",
    "id": "259",
    "name": "mutants/259/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -823,7 +823,8 @@\n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n-        if (balance > 0) {\n+        /// IfStatementMutation(`balance > 0` |==> `true`) of: `if (balance > 0) {`\n+        if (true) {\n             tokenContract.safeTransfer(recipient, balance);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n",
    "id": "260",
    "name": "mutants/260/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -823,7 +823,8 @@\n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n-        if (balance > 0) {\n+        /// IfStatementMutation(`balance > 0` |==> `false`) of: `if (balance > 0) {`\n+        if (false) {\n             tokenContract.safeTransfer(recipient, balance);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n",
    "id": "261",
    "name": "mutants/261/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -823,7 +823,8 @@\n         IERC20 tokenContract = IERC20(token);\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n-        if (balance > 0) {\n+        /// SwapArgumentsOperatorMutation(`balance > 0` |==> `0 > balance`) of: `if (balance > 0) {`\n+        if (0 > balance) {\n             tokenContract.safeTransfer(recipient, balance);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n",
    "id": "262",
    "name": "mutants/262/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -824,7 +824,8 @@\n         uint256 balance = tokenContract.balanceOf(address(this));\n         \n         if (balance > 0) {\n-            tokenContract.safeTransfer(recipient, balance);\n+            /// DeleteExpressionMutation(`tokenContract.safeTransfer(recipient, balance)` |==> `assert(true)`) of: `tokenContract.safeTransfer(recipient, balance);`\n+            assert(true);\n             emit EmergencyWithdrawal(token, recipient, balance);\n         }\n     }\n",
    "id": "263",
    "name": "mutants/263/vault_flattened.sol",
    "original": "vault_flattened.sol",
    "sourceroot": "/home/justin/code/BehodlerReborn/Grok/reflax"
  }
]